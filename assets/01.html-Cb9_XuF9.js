import{aq as n,ar as a,as as p,at as e}from"./app-Cok9BT0p.js";const l="/note-front/other/construct/webpack/010.png",t="/note-front/other/construct/vite/001.png",i={};function c(o,s){return e(),a("div",null,s[0]||(s[0]=[p(`<h1 id="一、认识vite" tabindex="-1"><a class="header-anchor" href="#一、认识vite"><span>一、认识Vite</span></a></h1><h2 id="_1-1-vite介绍" tabindex="-1"><a class="header-anchor" href="#_1-1-vite介绍"><span>1.1 vite介绍</span></a></h2><p>Vite 是一个现代化的前端构建工具，旨在通过利用现代浏览器的原生 ES 模块支持，提供快速的开发体验。</p><p>Vite 由两部分组成：</p><ul><li>开发服务器： 基于原生 ES 模块，提供超快的热更新。</li><li>构建命令： 使用 Rollup 打包代码，生成适用于生产环境的优化静态资源。</li></ul><ol><li><p>传统构建工具的痛点</p><p>在 Vite 出现之前，前端开发通常使用 Webpack 等构建工具，这些工具虽然功能强大，但也存在一些痛点：</p><ul><li>启动速度慢： 项目越大，启动时间越长，影响开发效率。</li><li>热更新慢： 每次修改代码后，都需要重新构建整个项目，导致热更新速度慢。</li><li>配置复杂： Webpack 等工具配置复杂，学习成本高。</li></ul><p>Vite 的出现解决了传统构建工具的痛点，具有以下优势：</p><ul><li>极速启动： 利用浏览器原生 ES 模块支持，无需打包，启动速度极快。</li><li>快速热更新： 仅更新修改的模块，保持应用状态，提升开发效率。</li><li>丰富的功能： 支持 TypeScript、JSX、CSS 等，开箱即用。</li><li>高度可扩展： 通过插件系统，轻松集成其他工具和框架。</li></ul></li><li><p>Vite 的工作原理</p><p>Vite 的工作原理可以分为开发模式和生产模式：</p><ul><li><p>开发模式：</p><ul><li>Vite 启动一个开发服务器，利用浏览器原生支持 ES 模块的特性，直接加载源代码。</li><li>当代码发生变化时，Vite 只会更新修改的模块，并通知浏览器进行热更新，保持应用状态。</li></ul></li><li><p>生产模式：</p><ul><li>Vite 使用 Rollup 打包代码，生成优化后的静态资源文件。</li><li>这些文件可以部署到任何静态文件服务器上。</li></ul></li></ul></li><li><p>Vite 适用场景</p><p>Vite 适用于各种项目，尤其适合：</p><ul><li>单页应用 (SPA)： 如 Vue、React 项目。</li><li>静态网站： 快速构建博客、文档等。</li><li>库开发： 利用 Vite 的构建功能，高效开发和打包库。</li></ul></li></ol><h2 id="_1-2-创建-vite-项目" tabindex="-1"><a class="header-anchor" href="#_1-2-创建-vite-项目"><span>1.2 创建 Vite 项目</span></a></h2><ol><li><p>命令行执行</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> create vite@latest</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>项目选项（这里选用vue）</p><p><img src="`+l+`" alt=""></p></li><li><p>项目介绍</p><ul><li>node_modules: 存放项目依赖的文件夹。</li><li>public: 存放静态资源的文件夹，例如图片、字体等。</li><li>src: 存放项目源代码的文件夹。 <ul><li>main.js: 项目入口文件。</li><li>App.vue: Vue 项目根组件。</li></ul></li><li>index.html: 项目首页。</li><li>package.json: 项目配置文件，包含项目信息、依赖和脚本命令。</li><li>vite.config.js: Vite 配置文件，用于配置 Vite 的各种选项。</li></ul></li><li><p>安装并启动</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"># 进入目录</span>
<span class="line">cd vite-test</span>
<span class="line"># 安装插件</span>
<span class="line">npm install</span>
<span class="line"># 启动项目</span>
<span class="line">npm run serve</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行结果</p><p><img src="`+t+`" alt=""></p></li><li><p>关于入口文件，vite 使用html作为入口文件，html中执行入口文件</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/src/main.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h2 id="_1-3-vite-config-js-配置项" tabindex="-1"><a class="header-anchor" href="#_1-3-vite-config-js-配置项"><span>1.3 vite.config.js 配置项</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 导入 defineConfig 函数，用于定义 Vite 配置</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 导入 Vue 插件，用于支持 Vue 项目</span></span>
<span class="line"><span class="token keyword">import</span> vue <span class="token keyword">from</span> <span class="token string">&#39;@vitejs/plugin-vue&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 导入 path 模块，用于处理路径</span></span>
<span class="line"><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 使用 defineConfig 定义 Vite 配置</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 项目根目录，默认为当前工作目录</span></span>
<span class="line">  <span class="token literal-property property">root</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 基础路径，用于部署在子路径时使用</span></span>
<span class="line">  <span class="token literal-property property">base</span><span class="token operator">:</span> <span class="token string">&#39;/my-app/&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 开发服务器配置</span></span>
<span class="line">  <span class="token literal-property property">server</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 指定开发服务器端口</span></span>
<span class="line">    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 是否自动打开浏览器</span></span>
<span class="line">    <span class="token literal-property property">open</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 配置代理服务器，用于解决跨域问题</span></span>
<span class="line">    <span class="token literal-property property">proxy</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string-property property">&#39;/api&#39;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token string">&#39;http://localhost:8080&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 目标服务器地址</span></span>
<span class="line">        <span class="token literal-property property">changeOrigin</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否改变请求源</span></span>
<span class="line">        <span class="token function-variable function">rewrite</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^\\/api</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 重写请求路径</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 构建配置</span></span>
<span class="line">  <span class="token literal-property property">build</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 指定输出目录</span></span>
<span class="line">    <span class="token literal-property property">outDir</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;../dist&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 指定静态资源目录</span></span>
<span class="line">    <span class="token literal-property property">assetsDir</span><span class="token operator">:</span> <span class="token string">&#39;static&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 是否生成 sourcemap 文件</span></span>
<span class="line">    <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 是否压缩代码</span></span>
<span class="line">    <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token string">&#39;terser&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 使用 terser 进行代码压缩</span></span>
<span class="line">    <span class="token comment">// 配置 Rollup 选项</span></span>
<span class="line">    <span class="token literal-property property">rollupOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token comment">// 配置外部依赖</span></span>
<span class="line">      <span class="token literal-property property">external</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;lodash&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token comment">// 配置输出格式</span></span>
<span class="line">      <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token literal-property property">manualChunks</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token comment">// 将 lodash 单独打包</span></span>
<span class="line">          <span class="token literal-property property">lodash</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;lodash&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 插件配置</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token comment">// 使用 Vue 插件</span></span>
<span class="line">    <span class="token function">vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 模块解析配置</span></span>
<span class="line">  <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 配置路径别名</span></span>
<span class="line">    <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token string-property property">&#39;@&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 将 @ 映射到 src 目录</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// CSS 配置</span></span>
<span class="line">  <span class="token literal-property property">css</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 配置 CSS 预处理器选项</span></span>
<span class="line">    <span class="token literal-property property">preprocessorOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">scss</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 全局注入 SCSS 变量</span></span>
<span class="line">        <span class="token literal-property property">additionalData</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">@import &quot;@/styles/variables.scss&quot;;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 环境变量配置</span></span>
<span class="line">  <span class="token literal-property property">envPrefix</span><span class="token operator">:</span> <span class="token string">&#39;VITE_&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 环境变量前缀，默认为 VITE_</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10)]))}const u=n(i,[["render",c]]),d=JSON.parse('{"path":"/other/construct/vite/01.html","title":"一、认识Vite","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1757530254000,"contributors":[{"name":"zhao-farmer","username":"zhao-farmer","email":"857899180@qq.com","commits":1,"url":"https://github.com/zhao-farmer"}],"changelog":[{"hash":"2c9ec28ff41db4bb3e8c363d6656a261f88b4c95","time":1757530254000,"email":"857899180@qq.com","author":"zhao-farmer","message":"react一些相关的"}]},"filePathRelative":"other/construct/vite/01.md"}');export{u as comp,d as data};
