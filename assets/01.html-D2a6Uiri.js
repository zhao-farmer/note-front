import{aq as n,ar as a,as as t,at as e}from"./app-Cok9BT0p.js";const p="/note-front/other/construct/esbuild/001.png",o="/note-front/other/construct/esbuild/002.png",l={};function c(i,s){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="一、esbuild" tabindex="-1"><a class="header-anchor" href="#一、esbuild"><span>一、ESbuild</span></a></h1><h2 id="_1-1-快速开始" tabindex="-1"><a class="header-anchor" href="#_1-1-快速开始"><span>1.1 快速开始</span></a></h2><ol><li><p>安装插件</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> esbuild <span class="token parameter variable">-g</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>代码文件</p><ul><li><p>新建文件 src/main.js</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token string">&quot;hello esbuild&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>新建文件 src/page1.js</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token string">&quot;导出page1&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>新建文件 src/page2.js</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token string">&quot;导出page1&quot;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li><li><p>命令行基础用法</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 单文件打包</span></span>
<span class="line">esbuild src/main.js <span class="token parameter variable">--outfile</span><span class="token operator">=</span>dist/bundle.js <span class="token parameter variable">--bundle</span> <span class="token parameter variable">--minify</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 多入口打包</span></span>
<span class="line">esbuild src/page1.js src/page2.js <span class="token parameter variable">--outdir</span><span class="token operator">=</span>dist <span class="token parameter variable">--bundle</span> <span class="token parameter variable">--format</span><span class="token operator">=</span>esm</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行结果</p><p><img src="`+p+`" alt=""></p></li><li><p>常用 CLI 参数</p></li></ol><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td><code>--bundle</code></td><td>打包依赖</td></tr><tr><td><code>--outfile=FILE</code></td><td>单文件输出</td></tr><tr><td><code>--outdir=DIR</code></td><td>多文件输出目录</td></tr><tr><td><code>--format=esm/cjs/iife</code></td><td>输出格式</td></tr><tr><td><code>--minify</code></td><td>压缩代码</td></tr><tr><td><code>--sourcemap</code></td><td>生成 Sourcemap</td></tr><tr><td><code>--target=esnext</code></td><td>指定 JavaScript 目标版本</td></tr><tr><td><code>--platform=node/browser</code></td><td>运行环境</td></tr></tbody></table><h2 id="_1-2-配置文件-esbuild-config-js" tabindex="-1"><a class="header-anchor" href="#_1-2-配置文件-esbuild-config-js"><span>1.2 配置文件 esbuild.config.js</span></a></h2><ol><li><p>准备工作</p><ul><li><p>创建项目</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> init <span class="token parameter variable">-y</span></span>
<span class="line"><span class="token function">pnpm</span> <span class="token function">install</span> esbuild <span class="token parameter variable">-D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建文件 src/main.js</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>同步配置</p><ul><li><p>esbuild.config.js 代码</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> esbuild <span class="token keyword">from</span> <span class="token string">&#39;esbuild&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 同步配置</span></span>
<span class="line">esbuild<span class="token punctuation">.</span><span class="token function">buildSync</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">entryPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;src/main.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">outfile</span><span class="token operator">:</span> <span class="token string">&#39;dist/bundle.js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">bundle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;es2020&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">platform</span><span class="token operator">:</span> <span class="token string">&#39;browser&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>命令行打包</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">node</span> esbuild.config.js</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>命令行结果</p><p><img src="`+o+`" alt=""></p></li></ul></li><li><p>异步配置</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> esbuild <span class="token keyword">from</span> <span class="token string">&#39;esbuild&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 异步配置（推荐）</span></span>
<span class="line">esbuild<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">entryPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;src/**/*.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 支持 glob 模式</span></span>
<span class="line">    <span class="token literal-property property">outdir</span><span class="token operator">:</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;esm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token comment">/* 插件 */</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;构建完成&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_1-3-钩子函数" tabindex="-1"><a class="header-anchor" href="#_1-3-钩子函数"><span>1.3 钩子函数</span></a></h2><ol><li>关键钩子功能说明</li></ol><table><thead><tr><th>钩子</th><th>触发时机</th><th>典型用途</th><th>示例返回值</th></tr></thead><tbody><tr><td>​<strong>​<code>onStart</code>​</strong>​</td><td>构建开始时</td><td>初始化操作、清理旧文件</td><td><code>{ warnings: [] }</code></td></tr><tr><td>​<strong>​<code>onResolve</code>​</strong>​</td><td>解析模块路径时</td><td>别名处理、外部依赖标记、虚拟模块</td><td><code>{ path, external, namespace }</code></td></tr><tr><td>​<strong>​<code>onLoad</code>​</strong>​</td><td>加载文件内容前</td><td>动态生成内容、文件转换、代码修改</td><td><code>{ contents, loader, resolveDir }</code></td></tr><tr><td>​<strong>​<code>onEnd</code>​</strong>​</td><td>构建完成时</td><td>分析结果、生成报告、通知部署</td><td>无返回值，接收 <code>result</code>参数</td></tr><tr><td>​<strong>​<code>onDispose</code>​</strong>​</td><td>插件卸载时</td><td>关闭服务、清理临时资源</td><td>无返回值</td></tr></tbody></table><ol start="2"><li><p>流程图</p><code><pre class="mermaid" id="mermaid-ascqptf">            graph LR
    A[onStart] --&gt; B[解析+加载]
    B --&gt; C[代码转换]
    C --&gt; D[输出文件]
    D --&gt; E[onEnd]

          </pre></code></li><li><p>代码示例</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> esbuild <span class="token keyword">from</span> <span class="token string">&#39;esbuild&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">&#39;fs&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/** 全功能插件（演示所有钩子） */</span></span>
<span class="line"><span class="token keyword">const</span> fullFeaturePlugin <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;all-hooks-demo&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token function">setup</span><span class="token punctuation">(</span><span class="token parameter">build</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// ======================</span></span>
<span class="line">        <span class="token comment">// 1. 构建生命周期钩子</span></span>
<span class="line">        <span class="token comment">// ======================</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** 构建开始时触发 */</span></span>
<span class="line">        build<span class="token punctuation">.</span><span class="token function">onStart</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;构建启动&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">warnings</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> <span class="token comment">// 可返回初始警告</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** 构建结束时触发（无论成功与否） */</span></span>
<span class="line">        build<span class="token punctuation">.</span><span class="token function">onEnd</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>errors<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;构建失败:&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>errors<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;构建成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">// 可操作 result.metafile 分析依赖</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>metafile<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;meta.json&#39;</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>metafile<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** 插件被移除时触发 */</span></span>
<span class="line">        build<span class="token punctuation">.</span><span class="token function">onDispose</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;插件卸载&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// ======================</span></span>
<span class="line">        <span class="token comment">// 2. 模块解析钩子 (onResolve)</span></span>
<span class="line">        <span class="token comment">// ======================</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** 处理别名 (@/ -&gt; src/) */</span></span>
<span class="line">        build<span class="token punctuation">.</span><span class="token function">onResolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@\\/</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">path</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>resolveDir<span class="token punctuation">,</span> args<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;@/&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;src/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** 标记特定模块为外部依赖 */</span></span>
<span class="line">        build<span class="token punctuation">.</span><span class="token function">onResolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^react$</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">external</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 不打包此模块</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** 创建虚拟模块 */</span></span>
<span class="line">        build<span class="token punctuation">.</span><span class="token function">onResolve</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^virtual:config</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">path</span><span class="token operator">:</span> args<span class="token punctuation">.</span>path<span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;virtual-module&#39;</span> <span class="token comment">// 自定义命名空间</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// ======================</span></span>
<span class="line">        <span class="token comment">// 3. 模块加载钩子 (onLoad)</span></span>
<span class="line">        <span class="token comment">// ======================</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** 加载虚拟模块内容 */</span></span>
<span class="line">        build<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token literal-property property">namespace</span><span class="token operator">:</span> <span class="token string">&#39;virtual-module&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token literal-property property">contents</span><span class="token operator">:</span> <span class="token string">&#39;export default { env: &quot;production&quot; }&#39;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;js&#39;</span> <span class="token comment">// 指定为 JS 类型</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** 转换 CSV 文件为 JS 模块 */</span></span>
<span class="line">        build<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.csv$</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token literal-property property">contents</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">export default </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;js&#39;</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">resolveDir</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>path<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token doc-comment comment">/** 移除所有 console.log */</span></span>
<span class="line">        build<span class="token punctuation">.</span><span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.jsx?$</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">let</span> code <span class="token operator">=</span> <span class="token keyword">await</span> fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            code <span class="token operator">=</span> code<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">console\\.log\\(.*?\\);?</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">contents</span><span class="token operator">:</span> code<span class="token punctuation">,</span> <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token string">&#39;jsx&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// ======================</span></span>
<span class="line"><span class="token comment">// 主配置</span></span>
<span class="line"><span class="token comment">// ======================</span></span>
<span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">entryPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;src/main.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">outdir</span><span class="token operator">:</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">bundle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;esm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>fullFeaturePlugin<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 启用元文件生成（供 onEnd 分析）</span></span>
<span class="line">    <span class="token literal-property property">metafile</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 其他配置</span></span>
<span class="line">    <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string-property property">&#39;.png&#39;</span><span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span>          <span class="token comment">// 图片作为文件输出</span></span>
<span class="line">        <span class="token string-property property">&#39;.svg&#39;</span><span class="token operator">:</span> <span class="token string">&#39;dataurl&#39;</span>        <span class="token comment">// SVG 内联为 DataURL</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">define</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string-property property">&#39;process.env.NODE_ENV&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&quot;production&quot;&#39;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 执行构建</span></span>
<span class="line">esbuild<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h2 id="_1-4-esbuild-配置项" tabindex="-1"><a class="header-anchor" href="#_1-4-esbuild-配置项"><span>1.4 esbuild 配置项</span></a></h2><h3 id="​1-4-1-​输入配置​​" tabindex="-1"><a class="header-anchor" href="#​1-4-1-​输入配置​​"><span>​1.4.1 <strong>​输入配置​</strong>​</span></a></h3><table><thead><tr><th>配置项</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>entryPoints</code></td><td><code>string[]</code></td><td>-</td><td>​<strong>​必填​</strong>​，入口文件路径（支持 glob 模式如 <code>src/**/*.js</code>）</td></tr><tr><td><code>entryNames</code></td><td><code>string</code></td><td><code>[dir]/[name]</code></td><td>输出文件名模板（支持 <code>[name]</code>、<code>[hash]</code>、<code>[ext]</code>等占位符）</td></tr><tr><td><code>outbase</code></td><td><code>string</code></td><td>-</td><td>指定基础目录（用于计算输出文件路径的相对位置）</td></tr></tbody></table><h3 id="_1-4-2-​​输出配置​​" tabindex="-1"><a class="header-anchor" href="#_1-4-2-​​输出配置​​"><span>1.4.2 ​<strong>​输出配置​</strong>​</span></a></h3><table><thead><tr><th>配置项</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>outfile</code></td><td><code>string</code></td><td>-</td><td>单文件输出路径（与 <code>outdir</code>二选一）</td></tr><tr><td><code>outdir</code></td><td><code>string</code></td><td>-</td><td>多文件输出目录（需配合 <code>entryPoints</code>使用）</td></tr><tr><td><code>format</code></td><td><code>string</code></td><td><code>iife</code></td><td>输出格式：<code>esm</code>（ES Module）、<code>cjs</code>（CommonJS）、<code>iife</code>（自执行函数）</td></tr><tr><td><code>target</code></td><td><code>string[]</code></td><td><code>esnext</code></td><td>目标环境（如 <code>[&#39;es2020&#39;, &#39;chrome58&#39;, &#39;node12&#39;]</code>）</td></tr><tr><td><code>platform</code></td><td><code>string</code></td><td><code>browser</code></td><td>平台：<code>browser</code>（默认）、<code>node</code>、<code>neutral</code></td></tr><tr><td><code>globalName</code></td><td><code>string</code></td><td>-</td><td>当 <code>format</code>为 <code>iife</code>/<code>umd</code>时，指定全局变量名（如 <code>MyLib</code>）</td></tr><tr><td><code>charset</code></td><td><code>string</code></td><td><code>utf8</code></td><td>输出编码：<code>utf8</code>或 <code>ascii</code></td></tr></tbody></table><h3 id="_1-4-3-​功能开关​​" tabindex="-1"><a class="header-anchor" href="#_1-4-3-​功能开关​​"><span>1.4.3 ​<strong>功能开关​</strong>​</span></a></h3><table><thead><tr><th>配置项</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>bundle</code></td><td><code>boolean</code></td><td><code>false</code></td><td>是否打包依赖（<code>node_modules</code>中的模块）</td></tr><tr><td><code>splitting</code></td><td><code>boolean</code></td><td><code>false</code></td><td>是否启用代码分割（需 <code>format: &#39;esm&#39;</code>和 <code>outdir</code>）</td></tr><tr><td><code>minify</code></td><td><code>boolean</code></td><td><code>false</code></td><td>是否压缩代码（包含 JS/CSS/HTML）</td></tr><tr><td><code>treeShaking</code></td><td><code>boolean</code></td><td><code>true</code></td><td>是否启用 Tree-shaking（删除未使用代码）</td></tr><tr><td><code>sourcemap</code></td><td><code>boolean</code>/<code>string</code></td><td><code>false</code></td><td>生成 Sourcemap：<code>true</code>、<code>false</code>、<code>inline</code>、<code>external</code></td></tr><tr><td><code>metafile</code></td><td><code>boolean</code></td><td><code>false</code></td><td>是否生成元文件（包含构建信息，可通过 <code>result.metafile</code>获取）</td></tr></tbody></table><h3 id="​1-4-4-加载器与转换​​" tabindex="-1"><a class="header-anchor" href="#​1-4-4-加载器与转换​​"><span>​1.4.4 <strong>加载器与转换​</strong>​</span></a></h3><table><thead><tr><th>配置项</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>loader</code></td><td><code>object</code></td><td>-</td><td>文件类型处理器（键为扩展名，值为 loader 类型）</td></tr><tr><td><code>jsx</code></td><td><code>string</code></td><td><code>transform</code></td><td>JSX 处理方式：<code>transform</code>（转换）、<code>preserve</code>（保留）、<code>automatic</code>（React 17+）</td></tr><tr><td><code>jsxFactory</code></td><td><code>string</code></td><td><code>React.createElement</code></td><td>自定义 JSX 工厂函数</td></tr><tr><td><code>jsxFragment</code></td><td><code>string</code></td><td><code>React.Fragment</code></td><td>自定义 JSX Fragment 组件</td></tr></tbody></table><p>​<strong>​Loader 类型列表​</strong>​：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&#39;.js&#39;</span><span class="token operator">:</span> <span class="token string">&#39;jsx&#39;</span><span class="token punctuation">,</span>      <span class="token comment">// 解析 JSX</span></span>
<span class="line">  <span class="token string-property property">&#39;.ts&#39;</span><span class="token operator">:</span> <span class="token string">&#39;ts&#39;</span><span class="token punctuation">,</span>       <span class="token comment">// TypeScript</span></span>
<span class="line">  <span class="token string-property property">&#39;.json&#39;</span><span class="token operator">:</span> <span class="token string">&#39;json&#39;</span><span class="token punctuation">,</span>   <span class="token comment">// JSON -&gt; JS 对象</span></span>
<span class="line">  <span class="token string-property property">&#39;.txt&#39;</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 纯文本</span></span>
<span class="line">  <span class="token string-property property">&#39;.css&#39;</span><span class="token operator">:</span> <span class="token string">&#39;css&#39;</span><span class="token punctuation">,</span>     <span class="token comment">// CSS（可压缩）</span></span>
<span class="line">  <span class="token string-property property">&#39;.png&#39;</span><span class="token operator">:</span> <span class="token string">&#39;file&#39;</span><span class="token punctuation">,</span>    <span class="token comment">// 输出为文件</span></span>
<span class="line">  <span class="token string-property property">&#39;.svg&#39;</span><span class="token operator">:</span> <span class="token string">&#39;dataurl&#39;</span>  <span class="token comment">// 内联为 DataURL</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="​1-4-5-​路径与别名​​" tabindex="-1"><a class="header-anchor" href="#​1-4-5-​路径与别名​​"><span>​1.4.5 <strong>​路径与别名​</strong>​</span></a></h3><table><thead><tr><th>配置项</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>alias</code></td><td><code>object</code></td><td>-</td><td>路径别名（如 <code>{ &#39;@&#39;: &#39;./src&#39; }</code>）</td></tr><tr><td><code>external</code></td><td><code>string[]</code></td><td>-</td><td>外部化依赖（不打包的模块，如 <code>[&#39;react&#39;, &#39;lodash&#39;]</code>）</td></tr><tr><td><code>resolveExtensions</code></td><td><code>string[]</code></td><td><code>[&#39;.js&#39;,...]</code></td><td>解析模块时尝试的扩展名顺序</td></tr><tr><td><code>mainFields</code></td><td><code>string[]</code></td><td><code>[&#39;module&#39;, &#39;main&#39;]</code></td><td>优先读取的 <code>package.json</code>字段</td></tr></tbody></table><h3 id="​1-4-6-插件与钩子​​" tabindex="-1"><a class="header-anchor" href="#​1-4-6-插件与钩子​​"><span>​1.4.6 <strong>插件与钩子​</strong>​</span></a></h3><table><thead><tr><th>配置项</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>plugins</code></td><td><code>array</code></td><td><code>[]</code></td><td>插件列表（按顺序执行）</td></tr><tr><td><code>inject</code></td><td><code>string[]</code></td><td>-</td><td>自动注入的模块路径（如 <code>[&#39;./shim.js&#39;]</code>）</td></tr></tbody></table><h3 id="_1-4-7-​优化与高级配置​​" tabindex="-1"><a class="header-anchor" href="#_1-4-7-​优化与高级配置​​"><span>1.4.7 ​<strong>优化与高级配置​</strong>​</span></a></h3><table><thead><tr><th>配置项</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><code>define</code></td><td><code>object</code></td><td>-</td><td>全局变量替换（如 <code>{ &#39;process.env.NODE_ENV&#39;: &#39;&quot;production&quot;&#39; }</code>）</td></tr><tr><td><code>pure</code></td><td><code>string[]</code></td><td>-</td><td>标记纯函数（如 <code>[&#39;console.log&#39;]</code>以移除副作用）</td></tr><tr><td><code>keepNames</code></td><td><code>boolean</code></td><td><code>false</code></td><td>是否保留变量/函数原名（禁用压缩时的名称混淆）</td></tr><tr><td><code>color</code></td><td><code>boolean</code></td><td><code>true</code></td><td>终端输出是否带颜色</td></tr><tr><td><code>logLevel</code></td><td><code>string</code></td><td><code>info</code></td><td>日志级别：<code>verbose</code>、<code>debug</code>、<code>info</code>、<code>warning</code>、<code>error</code>、<code>silent</code></td></tr></tbody></table><h3 id="​1-4-8-​完整配置示例​​" tabindex="-1"><a class="header-anchor" href="#​1-4-8-​完整配置示例​​"><span>​1.4.8 <strong>​完整配置示例​</strong>​</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> esbuild <span class="token keyword">from</span> <span class="token string">&#39;esbuild&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">&#39;path&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token doc-comment comment">/** <span class="token keyword">@type</span> <span class="token class-name"><span class="token punctuation">{</span>esbuild<span class="token punctuation">.</span>BuildOptions<span class="token punctuation">}</span></span> */</span></span>
<span class="line"><span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 输入</span></span>
<span class="line">  <span class="token literal-property property">entryPoints</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;src/index.tsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;src/utils/*.ts&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">entryNames</span><span class="token operator">:</span> <span class="token string">&#39;[dir]/[name]-[hash]&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">outbase</span><span class="token operator">:</span> <span class="token string">&#39;src&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 输出</span></span>
<span class="line">  <span class="token literal-property property">outdir</span><span class="token operator">:</span> <span class="token string">&#39;dist&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;esm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">target</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;es2020&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chrome80&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">platform</span><span class="token operator">:</span> <span class="token string">&#39;browser&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">charset</span><span class="token operator">:</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 功能开关</span></span>
<span class="line">  <span class="token literal-property property">bundle</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">splitting</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">metafile</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 加载器</span></span>
<span class="line">  <span class="token literal-property property">loader</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&#39;.ts&#39;</span><span class="token operator">:</span> <span class="token string">&#39;ts&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&#39;.svg&#39;</span><span class="token operator">:</span> <span class="token string">&#39;dataurl&#39;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&#39;.png&#39;</span><span class="token operator">:</span> <span class="token string">&#39;file&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">jsx</span><span class="token operator">:</span> <span class="token string">&#39;automatic&#39;</span><span class="token punctuation">,</span> <span class="token comment">// React 17+ JSX 转换</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 路径解析</span></span>
<span class="line">  <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&#39;@&#39;</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">external</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;react&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">resolveExtensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;.tsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.ts&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.jsx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;.js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 插件</span></span>
<span class="line">  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token comment">// 自定义插件...</span></span>
<span class="line">  <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line"></span>
<span class="line">  <span class="token comment">// 高级</span></span>
<span class="line">  <span class="token literal-property property">define</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&#39;process.env.NODE_ENV&#39;</span><span class="token operator">:</span> <span class="token string">&#39;&quot;production&quot;&#39;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">pure</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;console.debug&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">logLevel</span><span class="token operator">:</span> <span class="token string">&#39;info&#39;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 执行构建</span></span>
<span class="line">esbuild<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> process<span class="token punctuation">.</span><span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-9-​​注意事项​​" tabindex="-1"><a class="header-anchor" href="#_1-4-9-​​注意事项​​"><span>1.4.9 ​<strong>​注意事项​</strong>​</span></a></h3><ol><li><p>​<strong>​<code>outfile</code>与 <code>outdir</code>互斥​</strong>​：两者只能选其一</p></li><li><p>​<strong>​代码分割限制​</strong>​：需同时满足：</p><ul><li><code>format: &#39;esm&#39;</code></li><li><code>bundle: true</code></li><li>指定 <code>outdir</code></li></ul></li><li><p>​<strong>​TypeScript 支持​</strong>​：无需额外配置，但需安装 <code>typescript</code></p></li><li><p>​<strong>​性能调优​</strong>​：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 限制并发数（默认根据 CPU 核心数）</span></span>
<span class="line">    <span class="token literal-property property">maxParallelFileOps</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// 禁用某些功能以加速开发构建</span></span>
<span class="line">    <span class="token literal-property property">minify</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">sourcemap</span><span class="token operator">:</span> <span class="token boolean">false</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,31)]))}const d=n(l,[["render",c]]),u=JSON.parse('{"path":"/other/construct/esbuild/01.html","title":"一、ESbuild","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1757530254000,"contributors":[{"name":"zhao-farmer","username":"zhao-farmer","email":"857899180@qq.com","commits":1,"url":"https://github.com/zhao-farmer"}],"changelog":[{"hash":"2c9ec28ff41db4bb3e8c363d6656a261f88b4c95","time":1757530254000,"email":"857899180@qq.com","author":"zhao-farmer","message":"react一些相关的"}]},"filePathRelative":"other/construct/esbuild/01.md"}');export{d as comp,u as data};
