import{aq as n,ar as a,as as p,at as t}from"./app-Cok9BT0p.js";const e="/note-front/backend/quote/api/001.png",o="/note-front/backend/quote/api/002.png",c={};function l(i,s){return t(),a("div",null,s[0]||(s[0]=[p(`<h1 id="json-server" tabindex="-1"><a class="header-anchor" href="#json-server"><span>json-server</span></a></h1><h2 id="_1、简介" tabindex="-1"><a class="header-anchor" href="#_1、简介"><span>1、简介</span></a></h2><p>Json-server 是一个零代码快速搭建本地 RESTful API 的工具。它使用 JSON 文件作为数据源，并提供了一组简单的路由和端点，可以模拟后端服务器的行为。</p><ul><li><p>github地址：<code>https://github.com/typicode/json-server</code></p></li><li><p>npm地址：<code>https://www.npmjs.com/package/json-server</code></p></li><li><p>V0版本 控制项更多 <code>https://github.com/typicode/json-server/tree/v0</code></p></li></ul><h2 id="_2、准备工作" tabindex="-1"><a class="header-anchor" href="#_2、准备工作"><span>2、准备工作</span></a></h2><ol><li>安装Node</li></ol><p>由于json-server需要通过Node对其进行启动，所以首先要安装Node。Node可自行安装，在此不再进行演示。</p><ol start="2"><li>全局安装json-server</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> json-server <span class="token parameter variable">-g</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>查看版本</li></ol><p>在cmd控制台中输入以下命令，查看版本号。用于验证是否安装成功。</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">json-server <span class="token parameter variable">-v</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="4"><li>准备一份JSON文件</li></ol><p>我这里准备的是一份名字为score.json的文件，用于存放虚拟数据。</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;scoreList&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token property">&quot;userName&quot;</span><span class="token operator">:</span><span class="token string">&quot;张三&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;score&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;yuWen&quot;</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token property">&quot;shuXue&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token property">&quot;yingYu&quot;</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token property">&quot;userName&quot;</span><span class="token operator">:</span><span class="token string">&quot;李四&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;score&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;yuWen&quot;</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token property">&quot;shuXue&quot;</span><span class="token operator">:</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token property">&quot;yingYu&quot;</span><span class="token operator">:</span><span class="token number">37</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token property">&quot;userName&quot;</span><span class="token operator">:</span><span class="token string">&quot;王五&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;score&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;yuWen&quot;</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token property">&quot;shuXue&quot;</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token property">&quot;yingYu&quot;</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token property">&quot;userName&quot;</span><span class="token operator">:</span><span class="token string">&quot;赵六&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;score&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;yuWen&quot;</span><span class="token operator">:</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token property">&quot;shuXue&quot;</span><span class="token operator">:</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token property">&quot;yingYu&quot;</span><span class="token operator">:</span><span class="token number">65</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token property">&quot;userName&quot;</span><span class="token operator">:</span><span class="token string">&quot;严七&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;score&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;yuWen&quot;</span><span class="token operator">:</span><span class="token number">34</span><span class="token punctuation">,</span><span class="token property">&quot;shuXue&quot;</span><span class="token operator">:</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token property">&quot;yingYu&quot;</span><span class="token operator">:</span><span class="token number">43</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token property">&quot;userName&quot;</span><span class="token operator">:</span><span class="token string">&quot;沈八&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">43</span><span class="token punctuation">,</span><span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;score&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;yuWen&quot;</span><span class="token operator">:</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token property">&quot;shuXue&quot;</span><span class="token operator">:</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token property">&quot;yingYu&quot;</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token property">&quot;userName&quot;</span><span class="token operator">:</span><span class="token string">&quot;钱九&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;score&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;yuWen&quot;</span><span class="token operator">:</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token property">&quot;shuXue&quot;</span><span class="token operator">:</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token property">&quot;yingYu&quot;</span><span class="token operator">:</span><span class="token number">30</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">{</span><span class="token property">&quot;id&quot;</span><span class="token operator">:</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token property">&quot;userName&quot;</span><span class="token operator">:</span><span class="token string">&quot;张十&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;age&quot;</span><span class="token operator">:</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token property">&quot;sex&quot;</span><span class="token operator">:</span><span class="token string">&quot;女&quot;</span><span class="token punctuation">,</span><span class="token property">&quot;score&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token property">&quot;yuWen&quot;</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token property">&quot;shuXue&quot;</span><span class="token operator">:</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token property">&quot;yingYu&quot;</span><span class="token operator">:</span><span class="token number">31</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3、启动服务" tabindex="-1"><a class="header-anchor" href="#_3、启动服务"><span>3、启动服务</span></a></h2><h3 id="_3-1-常用命令选项" tabindex="-1"><a class="header-anchor" href="#_3-1-常用命令选项"><span>3.1 常用命令选项</span></a></h3><ul><li>– watch：通过该命令可以实时监测score.json的变化，如果省略该命令，即使score.json发生变化，刷新、或重新发送请求，仍然会返回初次启动服务时的数据。简写形式为：-w</li><li>–port:指定服务的端口号，可省略，默认为3000。简写形式：-p</li><li>–host:设置域，可省略。简写形式：-H</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">json-server <span class="token parameter variable">--watch</span> score.json <span class="token parameter variable">--port</span> <span class="token number">8090</span>  <span class="token parameter variable">--host</span> <span class="token number">127.0</span>.0.1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>上方命令可简写为：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">json-server score.json <span class="token parameter variable">-w</span> <span class="token parameter variable">-p</span> <span class="token number">8090</span> <span class="token parameter variable">-H</span> <span class="token number">127.0</span>.0.1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>但，一般通过下面命令，即可完基本工作：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">json-server <span class="token parameter variable">-w</span> score.json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_3-2-工作场景建议" tabindex="-1"><a class="header-anchor" href="#_3-2-工作场景建议"><span>3.2 工作场景建议</span></a></h3><p>如果你已知项目接口域名及端口号，为避免后续更改接口信息。我们可以这样做：</p><ul><li>假设项目接口域名为：<code>api.mytest.com</code>,端口号为：<code>80</code></li><li>设置host映射：用记事本打开<code>C:\\Windows\\System32\\drivers\\etc</code>目录中的<code>hosts</code>文件。<br> 底部增加：<code>127.0.0.1 api.mytest.com</code>，该文件如果不允许修改，增加相对应的权限即可。</li><li>启动服务命令：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line">json-server <span class="token parameter variable">--watch</span> score.json <span class="token parameter variable">--port</span> <span class="token number">80</span>  <span class="token parameter variable">--host</span> api.mytest.com</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>由于80是默认端口号，所以我们可以通过<code>api.mytest.com</code>来对数据进行操作了。</p><h3 id="_3-3-通过package-json文件启动项目" tabindex="-1"><a class="header-anchor" href="#_3-3-通过package-json文件启动项目"><span>3.3 通过<code>package.json</code>文件启动项目</span></a></h3><p>启动json-server时， 如果自定义配置的参数过多，容易出现命令敲错的现象。我们可以在创建一个名字为<code>package.json</code>的文件，内容为：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;score&quot;</span><span class="token operator">:</span> <span class="token string">&quot;json-server --watch score.json --port 80  --host api.mytest.com&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过<code>npm run score</code>启动即可。</p><h3 id="_3-4-自定义配置文件" tabindex="-1"><a class="header-anchor" href="#_3-4-自定义配置文件"><span>3.4 自定义配置文件</span></a></h3><p>json-server允许我们把所有的配置放到一个配置文件中，这个配置文件默认json-server.json。配置文件的主要内容如下：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>  <span class="token comment">// 自定义服务监听端口</span></span>
<span class="line">  <span class="token property">&quot;watch&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 服务监听</span></span>
<span class="line">  <span class="token property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;api.mytest.com&quot;</span><span class="token punctuation">,</span><span class="token comment">// 指定域</span></span>
<span class="line">  <span class="token property">&quot;static&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./public&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 静态文件目录，可以将项目的HTML,JS,IMG等资源放在这里</span></span>
<span class="line">  <span class="token property">&quot;read-only&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment">// 是否只允许get请求</span></span>
<span class="line">  <span class="token property">&quot;no-cors&quot;</span><span class="token operator">:</span><span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否允许跨域访问</span></span>
<span class="line">  <span class="token property">&quot;no-gzip&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否可压缩</span></span>
<span class="line">  <span class="token property">&quot;routes&quot;</span><span class="token operator">:</span> <span class="token string">&quot;route.json&quot;</span> <span class="token comment">// 自定义路由，这个配置可以暂时省略，后续会有所涉及</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以通过<code>json-server --watch score.json</code>启动项目。</p><h3 id="_3-5-其它相关启动参数" tabindex="-1"><a class="header-anchor" href="#_3-5-其它相关启动参数"><span>3.5 其它相关启动参数</span></a></h3><table><thead><tr><th>参数</th><th>简写</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>–config</td><td>-c</td><td>指定配置文件路径</td><td>json-server.json</td></tr><tr><td>–port</td><td>-p</td><td>指定端口</td><td>3000</td></tr><tr><td>–host</td><td>-H</td><td>指定主机名</td><td>localhost</td></tr><tr><td>–watch</td><td>-w</td><td>监控文件变化</td><td></td></tr><tr><td>–routes</td><td>-r</td><td>指定路由文件路径</td><td></td></tr><tr><td>–middlewares</td><td>-m</td><td>指定中间件文件路径</td><td></td></tr><tr><td>–static</td><td>-s</td><td>指定静态文件文件夹路径</td><td></td></tr><tr><td>–read-only</td><td>–ro</td><td>指定只允许get请求</td><td></td></tr><tr><td>–no-cors</td><td>–nc</td><td>禁止跨域共享</td><td></td></tr><tr><td>–no-gzip</td><td>–ng</td><td>禁止gzip压缩</td><td></td></tr><tr><td>–snapshots</td><td>-S</td><td>指定快照目录</td><td>.</td></tr><tr><td>–delay</td><td>-d</td><td>指定延迟返回时长(ms)</td><td></td></tr><tr><td>–id</td><td>-i</td><td>指定数据库的ID属性</td><td>id</td></tr><tr><td>–foreignKeySuffix</td><td>–fks</td><td>指定外键前缀</td><td>Id</td></tr><tr><td>–quiet</td><td>-q</td><td>抑制来自输出的日志消息</td><td></td></tr><tr><td>–help</td><td>-h</td><td>显示帮助</td><td></td></tr><tr><td>–version</td><td>-v</td><td>显示版本号</td><td></td></tr></tbody></table><h2 id="_4、获取数据-get" tabindex="-1"><a class="header-anchor" href="#_4、获取数据-get"><span>4、获取数据(<code>get</code>)</span></a></h2><ol><li>get获取scoreList属性</li></ol><ul><li><code>http://api.mytest.com/scoreList</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>通过以下两种方式可get获取scoreList属性当中id为1的数据：</li></ol><ul><li><code>http://api.mytest.com/scoreList/1</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList/1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>http://api.mytest.com/scoreList?id=1</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            id<span class="token operator">:</span><span class="token number">1</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>单条件查找：<code>scoreList</code>属性<code>author</code>为<code>李四</code>的数据</li></ol><ul><li><code>http://api.mytest.com/scoreList?userName=李四</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            userName<span class="token operator">:</span><span class="token string">&quot;李四&quot;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>多条件查找：<code>scoreList</code>属性<code>sex</code>为<code>男</code>，<code>age</code>为<code>12</code>的数据</li></ol><ul><li><code>http://api.mytest.com/scoreList?sex=男&amp;age=12</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            sex<span class="token operator">:</span><span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            age<span class="token operator">:</span><span class="token number">12</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="5"><li><code>q</code>全局搜索（模糊查询）：查询<code>scoreList</code>所有属性值中包含<code>英</code>的数据</li></ol><ul><li><code>http://api.mytest.com/scoreList?q=张</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            q<span class="token operator">:</span><span class="token string">&quot;张&quot;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>可以用<code>.</code>访问更深层的属性：查询<code>scoreList</code>属性<code>score</code>的属性<code>yuWen</code>为<code>12</code>的数据：</li></ol><ul><li><code>http://api.mytest.com/scoreList?roles.yuWen=12</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token punctuation">[</span><span class="token string">&quot;score.yuWen&quot;</span><span class="token punctuation">]</span><span class="token operator">:</span><span class="token number">12</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>通过<code>_page</code> and <code>_limit</code> 实现对数据的分页：将<code>scoreList</code>每页显示<code>3</code>条记录，查询第<code>2</code>页内容：</li></ol><ul><li><code>http://api.mytest.com/scoreList?_page=2&amp;_limit=3</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot; http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            _page<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">            _limit<span class="token operator">:</span><span class="token number">3</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="8"><li>通过<code>_sort</code>与<code>_order</code> 对数据进行排序。<code>_sort</code>指定排序的属性，<code>_order</code>指定排序的类型（<code>asc</code>为升序，<code>desc</code>为降序）</li></ol><ul><li>按<code>age</code>的倒序排列：<br><code>http://api.mytest.com/scoreList?_sort=age&amp;_order=desc</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            _sort<span class="token operator">:</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            _order<span class="token operator">:</span><span class="token string">&quot;desc&quot;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>多条件排序：年龄相同按语文的升序排列：<br><code>http://api.mytest.com/scoreList?_sort=age,score.yuWen&amp;_order=desc,asc</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            _sort<span class="token operator">:</span><span class="token string">&quot;age,score.yuWen&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            _order<span class="token operator">:</span><span class="token string">&quot;desc,asc&quot;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="9"><li>通过<code>_start</code>、<code>_end</code>、<code>_limit</code>对数据进行截取。</li></ol><ul><li>截取前5条记录:<br><code>http://api.mytest.com/scoreList?_limit=5</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            _limit<span class="token operator">:</span><span class="token number">5</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>截取第3到第6的记录(共三条):<br><code>http://api.mytest.com/scoreList?_start=3&amp;_end=6</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            _start<span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">,</span></span>
<span class="line">            _end<span class="token operator">:</span><span class="token number">6</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>从第2条记录开始截取5条记录(共5条):<br><code>http://api.mytest.com/scoreList?_start=2&amp;_limit=5</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            _start<span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span></span>
<span class="line">            _limit<span class="token operator">:</span><span class="token number">5</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="10"><li>通过操作符<code>_gte</code>（大于等于）， <code>_lte</code>（小于等于）, <code>_ne</code>（不等于）, <code>_like</code>（模糊查询）获得数据。</li></ol><ul><li>年龄大于等于23：<br><code>http://api.mytest.com/scoreList?age_gte=23</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        params<span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            age_gte<span class="token operator">:</span><span class="token number">23</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5、添加数据-post" tabindex="-1"><a class="header-anchor" href="#_5、添加数据-post"><span>5、添加数据(<code>post</code>)</span></a></h2><ul><li><p>post请求体中附带传递的数据</p><p><code>http://api.mytest.com/scoreList</code></p></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token string-property property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">11</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-property property">&quot;userName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;萧十一郎&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-property property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">28</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-property property">&quot;sex&quot;</span><span class="token operator">:</span> <span class="token string">&quot;男&quot;</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token string-property property">&quot;score&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token string-property property">&quot;yuWen&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;shuXue&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;yingYu&quot;</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6、删除数据-delete" tabindex="-1"><a class="header-anchor" href="#_6、删除数据-delete"><span>6、删除数据（delete）</span></a></h2><ul><li><p>删除id为11的数据:</p><p><code>http://api.mytest.com/scoreList/11</code></p></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList/11&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7、更新数据-patch、put" tabindex="-1"><a class="header-anchor" href="#_7、更新数据-patch、put"><span>7、更新数据（patch、put）</span></a></h2><ul><li>通过<code>patch</code>请求，将<code>id</code>为<code>8</code>的记录属性<code>userName</code>修改为<code>张八</code>。（<code>patch</code>为局部修改）<br><code>http://api.mytest.com/scoreList/8</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList/8&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        userName<span class="token operator">:</span><span class="token string">&quot;张八&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>通过<code>put</code>请求将<code>id</code>为<code>8</code>的记录替换成一个新的对象，该对象只有<code>userName</code>属性，值为<code>新来的</code>。（<code>put</code>为替换，id不会替换）<br><code>http://api.mytest.com/scoreList/8</code></li></ul><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> <span class="token punctuation">{</span>data<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;http://api.mytest.com/scoreList/8&quot;</span><span class="token punctuation">,</span><span class="token punctuation">{</span></span>
<span class="line">        userName<span class="token operator">:</span><span class="token string">&quot;新来的&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8、自定义路由" tabindex="-1"><a class="header-anchor" href="#_8、自定义路由"><span>8、自定义路由</span></a></h2><p>创建route.json文件，可对路由进行如下配置：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line"><span class="token comment">//    /data/data1  ==&gt;  /data1</span></span>
<span class="line">    <span class="token property">&quot;/data/*&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/$1&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token comment">//    /data1/001/show ==&gt; /data1/001</span></span>
<span class="line">    <span class="token property">&quot;/:resource/:id/show&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/:resource/:id&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token comment">//    /data1/Sherry ==&gt; /data1?name=Sherry</span></span>
<span class="line">    <span class="token property">&quot;/data1/:name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/data1?name=:name&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token comment">//    /data1?id=002 ==&gt; /data/002 </span></span>
<span class="line">    <span class="token property">&quot;/:anyArray\\\\?id=:id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;/:anyArray/:id&quot;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动：</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line">json<span class="token operator">-</span>server <span class="token operator">--</span>watch score<span class="token punctuation">.</span>json <span class="token operator">--</span>routes route<span class="token punctuation">.</span>json</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_9、修改依赖的接口" tabindex="-1"><a class="header-anchor" href="#_9、修改依赖的接口"><span>9、修改依赖的接口</span></a></h2><p>json-server是依赖express开发而来，如有需要可进行深度定制</p><p>1、安装json-server</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> json-server <span class="token parameter variable">-D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2、创建server.js文件：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> jsonServer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;json-server&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> $db <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span>__dirname<span class="token operator">+</span><span class="token string">&quot;/score.json&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>
<span class="line"><span class="token keyword">const</span> server <span class="token operator">=</span> jsonServer<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> middlewares <span class="token operator">=</span> jsonServer<span class="token punctuation">.</span><span class="token function">defaults</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> router <span class="token operator">=</span> jsonServer<span class="token punctuation">.</span><span class="token function">router</span><span class="token punctuation">(</span>$db<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>router<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>middlewares<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>jsonServer<span class="token punctuation">.</span>bodyParser<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">8090</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;success&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10、配合vscode-live-server-插件" tabindex="-1"><a class="header-anchor" href="#_10、配合vscode-live-server-插件"><span>10、配合vscode <code>live server</code> 插件</span></a></h2><ol><li><p>问题</p><p>vscode json-server post请求刷新页面</p></li><li><p>产生原因</p><p>在 vscode 中使用了 liveServer 插件。并且 json-server 的数据文件处于 liveServer 监视中。 post 请求使 json-server 更新了 liveServer 监视中的文件导致页面刷新。</p></li><li><p>解决方法</p><ul><li><p>移动数据文件</p><p>将 json-server 的数据文件从 liveServer 监视中移出。</p></li><li><p>修改 liveServer 配置文件</p><ul><li><p>在扩展中设置 liveServer 的 liveServer.settings.ignoreFiles</p><p><img src="`+e+'" alt=""></p></li><li><p>将不需要监视的文件路径添加上</p><p><img src="'+o+'" alt=""></p></li></ul></li></ul></li></ol>',101)]))}const r=n(c,[["render",l]]),d=JSON.parse('{"path":"/backend/quote/api/01.html","title":"json-server","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1757530254000,"contributors":[{"name":"zhao-farmer","username":"zhao-farmer","email":"857899180@qq.com","commits":2,"url":"https://github.com/zhao-farmer"}],"changelog":[{"hash":"2c9ec28ff41db4bb3e8c363d6656a261f88b4c95","time":1757530254000,"email":"857899180@qq.com","author":"zhao-farmer","message":"react一些相关的"},{"hash":"bf54d5db5209f06fb3d25687934eecf69571d546","time":1754285665000,"email":"857899180@qq.com","author":"zhao-farmer","message":"2025年8月"}]},"filePathRelative":"backend/quote/api/01.md"}');export{r as comp,d as data};
