import{aq as s,ar as a,as as t,at as p}from"./app-Cok9BT0p.js";const e={};function c(o,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="js操作svg" tabindex="-1"><a class="header-anchor" href="#js操作svg"><span>JS操作svg</span></a></h1><p><strong>可缩放矢量图形</strong>（SVG）是一种基于XML的标记语言，用于描述二维矢量图形。与传统的像素图像不同，SVG图像在放大时不会失真，这使得它非常适合用于网页图形设计。在本文中，我们将探讨如何使用JavaScript与SVG交互，实现动态的图形效果。</p><h2 id="svg基础" tabindex="-1"><a class="header-anchor" href="#svg基础"><span>SVG基础</span></a></h2><p>SVG图像可以直接嵌入HTML文档中，成为DOM的一部分，这样就可以使用JavaScript和CSS来操作它们。例如，一个简单的SVG圆形可以通过以下代码嵌入到HTML中：</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>circle</span> <span class="token attr-name">cx</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span> <span class="token attr-name">cy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>50<span class="token punctuation">&quot;</span></span> <span class="token attr-name">r</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>40<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>green<span class="token punctuation">&quot;</span></span> <span class="token attr-name">stroke-width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>4<span class="token punctuation">&quot;</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>yellow<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，<code>&lt;circle&gt;</code>元素用于绘制一个圆形，<code>cx</code>和<code>cy</code>属性定义了圆心的坐标，<code>r</code>属性定义了圆的半径，<code>stroke</code>和<code>fill</code>属性分别定义了圆的边框颜色和填充颜色。</p><h2 id="javascript操作svg" tabindex="-1"><a class="header-anchor" href="#javascript操作svg"><span>JavaScript操作SVG</span></a></h2><h3 id="获取svg元素" tabindex="-1"><a class="header-anchor" href="#获取svg元素"><span>获取SVG元素</span></a></h3><p>如果SVG代码直接写在HTML中，我们可以像操作普通DOM元素一样操作SVG元素。例如，获取并修改上面圆形的半径：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">let</span> circle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;circle&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">circle<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;r&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;50&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="动态创建svg元素" tabindex="-1"><a class="header-anchor" href="#动态创建svg元素"><span>动态创建SVG元素</span></a></h3><p>我们也可以使用JavaScript动态创建SVG元素。以下是创建一个SVG矩形的例子：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">let</span> svgNS <span class="token operator">=</span> <span class="token string">&quot;http://www.w3.org/2000/svg&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">let</span> rect <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElementNS</span><span class="token punctuation">(</span>svgNS<span class="token punctuation">,</span> <span class="token string">&#39;rect&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">rect<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;x&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">rect<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;y&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;10&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">rect<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;width&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;30&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">rect<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;height&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;30&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">rect<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;fill&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;svg&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>rect<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，<code>createElementNS</code>函数用于创建属于SVG命名空间的元素。我们设置了矩形的位置、大小和填充颜色，然后将其添加到SVG中。</p><h3 id="修改svg属性" tabindex="-1"><a class="header-anchor" href="#修改svg属性"><span>修改SVG属性</span></a></h3><p>在SVG中，每个元素都有一系列属性，这些属性定义了元素的外观和行为。使用JavaScript，我们可以轻松地更改这些属性。例如，如果我们想要更改一个矩形的宽度，我们可以这样做：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 获取SVG矩形元素</span></span>
<span class="line"><span class="token keyword">var</span> rect <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myRect&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 设置新的宽度属性</span></span>
<span class="line">rect<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">&#39;width&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;200&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，我们首先通过<code>getElementById</code>方法获取了矩形元素，然后使用<code>setAttribute</code>方法来设置新的宽度值。</p><h3 id="修改svg元素的样式" tabindex="-1"><a class="header-anchor" href="#修改svg元素的样式"><span>修改SVG元素的样式</span></a></h3><p>SVG元素的样式可以通过CSS来控制。我们可以使用JavaScript来动态更改这些样式。例如，如果我们想要更改一个圆形的填充颜色，我们可以这样做：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 获取SVG圆形元素</span></span>
<span class="line"><span class="token keyword">var</span> circle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myCircle&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 设置新的填充颜色</span></span>
<span class="line">circle<span class="token punctuation">.</span>style<span class="token punctuation">.</span>fill <span class="token operator">=</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这个例子中，我们通过<code>style</code>属性直接设置了圆形的<code>fill</code>属性，从而改变了它的填充颜色。</p><h3 id="删除svg标签" tabindex="-1"><a class="header-anchor" href="#删除svg标签"><span>删除SVG标签</span></a></h3><p>有时候我们可能需要从SVG中删除某个元素。这可以通过JavaScript的<code>removeChild</code>或<code>remove</code>方法来实现。例如，如果我们想要删除一个线条元素，我们可以这样做：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// 获取SVG线条元素</span></span>
<span class="line"><span class="token keyword">var</span> line <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myLine&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 从父元素中删除线条</span></span>
<span class="line">line<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上面的代码中，我们首先获取了线条元素，然后使用<code>removeChild</code>方法将其从父元素中移除。</p><h3 id="监听和响应事件" tabindex="-1"><a class="header-anchor" href="#监听和响应事件"><span>监听和响应事件</span></a></h3><p>SVG元素也可以响应事件。例如，我们可以为圆形添加一个点击事件：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">circle<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&#39;圆形被点击了！&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,29)]))}const i=s(e,[["render",c]]),u=JSON.parse('{"path":"/animation/svg/records/02.html","title":"JS操作svg","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1752490925000,"contributors":[{"name":"zhao-farmer","username":"zhao-farmer","email":"857899180@qq.com","commits":1,"url":"https://github.com/zhao-farmer"}],"changelog":[{"hash":"08d014805d6447d2221b34fe03fdc2ca18411d66","time":1752490925000,"email":"857899180@qq.com","author":"zhao-farmer","message":"2025年7月更新"}]},"filePathRelative":"animation/svg/records/02.md"}');export{i as comp,u as data};
