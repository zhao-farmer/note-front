import{aq as s,ar as a,as as p,at as t}from"./app-Cok9BT0p.js";const e={};function o(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="二、puppeteer笔记" tabindex="-1"><a class="header-anchor" href="#二、puppeteer笔记"><span>二、Puppeteer笔记</span></a></h1><h2 id="_2-1-简介" tabindex="-1"><a class="header-anchor" href="#_2-1-简介"><span>2.1 <strong>简介</strong></span></a></h2><p>Puppeteer是一个Node库，它提供了一个高级API来通过DevTools协议控制Chromium或Chrome浏览器。Puppeteer默认以headless模式运行，即无界面模式，这意味着你可以在后台运行浏览器，无需人工干预。但也可以通过修改配置来运行“有头”模式。</p><p><a href="https://pptr.nodejs.cn/" target="_blank" rel="noopener noreferrer">Puppeteer 中文网</a></p><p><a href="https://pptr.dev/" target="_blank" rel="noopener noreferrer">Puppeteer</a></p><p>最后有我的使用样例，搞个抢票程序轻轻松松。若能结合其他的JS库，爬虫就是这么容易入门！</p><h2 id="_2-2-安装与配置" tabindex="-1"><a class="header-anchor" href="#_2-2-安装与配置"><span>2.2 <strong>安装与配置</strong></span></a></h2><ol><li><p><strong>安装Node.js</strong>：Puppeteer基于Node.js，因此需要先安装Node.js。确保你的Node.js版本在6.4以上。</p></li><li><p><strong>安装Puppeteer</strong>：通过npm（Node包管理器）安装Puppeteer。在命令行中输入以下命令：</p></li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> <span class="token function">install</span> puppeteer</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li><strong>配置</strong>：在创建browser时，可以通过传入配置项来控制无头模式。例如：</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> browser <span class="token operator">=</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 为false表示不开启无头模式</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-3-主要功能" tabindex="-1"><a class="header-anchor" href="#_2-3-主要功能"><span>2.3 <strong>主要功能</strong></span></a></h2><p><strong>网页自动化</strong>：使用Puppeteer，你可以让Chrome浏览器像机器人一样执行命令，包括点击、填写表单、截图、生成PDF等。</p><p><strong>高级爬虫</strong>：Puppeteer可以爬取大量异步渲染内容的网页。</p><p><strong>自动化测试</strong>：Puppeteer可以帮助你创建一个最新的自动化测试环境（chrome），直接在此运行测试用例。</p><p><strong>性能分析</strong>：Puppeteer可以捕获站点的时间线，帮助分析网站性能问题。</p><h2 id="_2-4-api实例" tabindex="-1"><a class="header-anchor" href="#_2-4-api实例"><span>2.4 api实例</span></a></h2><h3 id="_2-4-1-browser-newpage" tabindex="-1"><a class="header-anchor" href="#_2-4-1-browser-newpage"><span>2.4.1  <code>browser.newPage()</code></span></a></h3><p><strong>功能描述</strong>：<br> 此方法用于在指定的浏览器实例中创建一个新的页面。</p><p><strong>使用示例</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 创建一个新的页面</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-2-page-goto-url-options" tabindex="-1"><a class="header-anchor" href="#_2-4-2-page-goto-url-options"><span>2.4.2 <code>page.goto(url, options)</code></span></a></h3><p><strong>功能描述</strong>：<br> 此方法用于导航页面到指定的URL。</p><p><strong>参数说明</strong>：</p><ul><li><code>url</code>（字符串）：要导航到的URL。</li><li><code>options</code>（对象，可选）：导航选项，如<code>timeout</code>（等待导航完成的最大毫秒数，默认为30000毫秒）。</li></ul><p><strong>使用示例</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 导航到example.com，不设置超时</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-4-3-page-screenshot-options" tabindex="-1"><a class="header-anchor" href="#_2-4-3-page-screenshot-options"><span>2.4.3 <code>page.screenshot([options])</code></span></a></h3><p><strong>功能描述</strong>：<br> 此方法用于捕获页面的截图。</p><p><strong>参数说明</strong>：</p><ul><li><code>options</code>（对象，可选）：截图选项，如<code>path</code>（保存截图的文件路径，默认为<code>null</code>，即不保存文件）、<code>type</code>（截图的MIME类型，如<code>&#39;png&#39;</code>或<code>&#39;jpeg&#39;</code>，默认为<code>&#39;png&#39;</code>）等。</li></ul><p><strong>使用示例</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;screenshot.png&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 捕获页面截图并保存为screenshot.png</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-4-4-page-pdf-options" tabindex="-1"><a class="header-anchor" href="#_2-4-4-page-pdf-options"><span>2.4.4 <code>page.pdf([options])</code></span></a></h3><p><strong>功能描述</strong>：<br> 此方法用于生成页面的PDF文件。</p><p><strong>参数说明</strong>：</p><ul><li><code>options</code>（对象，可选）：PDF选项，如<code>path</code>（保存PDF的文件路径，默认为<code>null</code>，即不保存文件）、<code>format</code>（页面格式，如<code>&#39;A4&#39;</code>）、<code>printBackground</code>（是否打印背景图形和颜色，默认为<code>false</code>）等。</li></ul><p><strong>使用示例</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">pdf</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;page.pdf&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;A4&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成页面PDF并保存为page.pdf</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-4-5-page-click-selector-options" tabindex="-1"><a class="header-anchor" href="#_2-4-5-page-click-selector-options"><span>2.4.5 <code>page.click(selector[, options])</code></span></a></h3><p><strong>功能描述</strong>：<br> 此方法用于在页面上模拟点击操作。</p><p><strong>参数说明</strong>：</p><ul><li><code>selector</code>（字符串）：用于定位要点击的元素的CSS选择器。</li><li><code>options</code>（对象，可选）：点击选项，如<code>delay</code>（在点击之前等待的毫秒数，默认为0）等。</li></ul><p><strong>使用示例</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token string">&#39;#myButton&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 点击id为myButton的元素\`</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-4-6-page-evaluate-pagefunction-args" tabindex="-1"><a class="header-anchor" href="#_2-4-6-page-evaluate-pagefunction-args"><span>2.4.6 <code>page.evaluate(pageFunction[, ...args])</code></span></a></h3><p><strong>功能描述</strong>：<br> 此方法用于在页面上下文中执行JavaScript函数。</p><p><strong>参数说明</strong>：</p><ul><li><code>pageFunction</code>（函数）：要在页面上下文中执行的函数。</li><li><code>...args</code>（可选）：传递给<code>pageFunction</code>的参数。</li></ul><p><strong>使用示例</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> title <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> document<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 获取页面的标题</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_2-4-7-page-on-event-handler" tabindex="-1"><a class="header-anchor" href="#_2-4-7-page-on-event-handler"><span>2.4.7 <code>page.on(event, handler)</code></span></a></h3><p><strong>功能描述</strong>：<br> 此方法用于监听页面上的各种事件，如<code>request</code>、<code>response</code>、<code>console</code>等。</p><p><strong>参数说明</strong>：</p><ul><li><code>event</code>（字符串）：要监听的事件名称。</li><li><code>handler</code>（函数）：事件处理函数。</li></ul><p><strong>使用示例</strong>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line">page<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;console&#39;</span><span class="token punctuation">,</span> <span class="token parameter">msg</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;PAGE LOG:&#39;</span><span class="token punctuation">,</span> msg<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 监听页面上的console事件</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-5-使用示范" tabindex="-1"><a class="header-anchor" href="#_2-5-使用示范"><span>2.5 使用示范</span></a></h2><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> xydm <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> directoryPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> xydm <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>directoryPath<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    fs<span class="token punctuation">.</span>promises<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span>directoryPath<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">recursive</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm <span class="token operator">+</span> <span class="token string">&#39;:文件夹已创建&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">            console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>xydm <span class="token operator">+</span> <span class="token string">&#39;:创建文件夹时出错：&#39;</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">		<span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">defaultViewport</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1920</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">1080</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;--start-maximized&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">ignoreDefaultArgs</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 设置为非无头模式以查看操作</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">const</span> page1 <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token comment">//await page.addScriptTag({ path: &#39;./jquery-3.6.0.min.js&#39; })</span></span>
<span class="line">	<span class="token comment">//await page.waitForFunction(&#39;window.jQuery !== undefined&#39;);</span></span>
<span class="line">	<span class="token keyword">const</span> cookie <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Admin-Expires-In&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&#39;43200&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">&#39;XXX&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;Admin-Token&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&#39;915147a2-439f-405a-b876-5adad203f693&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">&#39;XXX&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;userType&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">&#39;XXX&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;xydm&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">&#39;XXX&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">{</span></span>
<span class="line">		<span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;yjType&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">value</span><span class="token operator">:</span><span class="token string">&#39;yj&#39;</span><span class="token punctuation">,</span></span>
<span class="line">		<span class="token literal-property property">url</span><span class="token operator">:</span><span class="token string">&#39;XXX&#39;</span><span class="token punctuation">,</span></span>
<span class="line">	<span class="token punctuation">}</span></span>
<span class="line">	<span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">setCookie</span><span class="token punctuation">(</span><span class="token operator">...</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;XXX/oIndex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 进入首页</span></span>
<span class="line">    <span class="token keyword">const</span> selector <span class="token operator">=</span> <span class="token string">&#39;.item.bklan&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span>selector<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;:进入首页&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">//进入菜单</span></span>
<span class="line">    <span class="token keyword">const</span> selector0 <span class="token operator">=</span> <span class="token string">&#39;.hamburger-container&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span>selector0<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">timeout</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>selector0<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;:进入菜单&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">//进入列表页</span></span>
<span class="line">	<span class="token comment">//const span = &#39;.el-menu-item.submenu-title-noDropdown&#39;;</span></span>
<span class="line">	<span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">waitForTimeout</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">const</span> span <span class="token operator">=</span> <span class="token string">&#39;li[tabindex=&quot;-1&quot;]&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span>span<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>span<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;:进入列表页&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">//搜索</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;:开始检索&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">waitForTimeout</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">const</span> span0 <span class="token operator">=</span> <span class="token string">&#39;input[placeholder=&quot;请输入企业名称&quot;]&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span>span0<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span>span0<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 首先将焦点移动到输入框上</span></span>
<span class="line">	<span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span>span0<span class="token punctuation">,</span> xydm<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">const</span> span2 <span class="token operator">=</span> <span class="token string">&#39;button&gt;i.el-icon-search&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>span2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 进入大屏首页</span></span>
<span class="line">	<span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">waitForTimeout</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> selector2 <span class="token operator">=</span> <span class="token string">&#39;.el-table_1_column_3&gt;div&gt;button&#39;</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span>selector2<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page1<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>selector2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;:进入大屏首页&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 等待大屏首页打开</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;等待大屏首页打开 ...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> newTarget1 <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">waitForTarget</span><span class="token punctuation">(</span><span class="token parameter">target</span> <span class="token operator">=&gt;</span> target<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;xydm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> page2 <span class="token operator">=</span> <span class="token keyword">await</span> newTarget1<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page2<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">//const page2 = await browser.newPage();</span></span>
<span class="line">	<span class="token comment">//await page2.goto(&#39;XXX/companyProfiles?xydm=061022303110201166&#39;);</span></span>
<span class="line">	<span class="token keyword">await</span> page2<span class="token punctuation">.</span><span class="token function">setCookie</span><span class="token punctuation">(</span><span class="token operator">...</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">await</span> page2<span class="token punctuation">.</span><span class="token function">waitForNavigation</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">waitUntil</span><span class="token operator">:</span> <span class="token string">&#39;networkidle0&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">await</span> page2<span class="token punctuation">.</span><span class="token function">waitForTimeout</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">await</span> page2<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span>directoryPath <span class="token operator">+</span><span class="token string">&#39;/大屏进入.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;:已经截取了大屏进入页面...&#39;</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">const</span> selector3 <span class="token operator">=</span> <span class="token string">&#39;.rightBottomProfilesCss&#39;</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">await</span> page2<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span>selector3<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page2<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>selector3<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;:进入数据大屏&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token comment">// 等待新页面打开</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;等待跳转大屏页...&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">const</span> newTarget2 <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">waitForTarget</span><span class="token punctuation">(</span><span class="token parameter">target</span> <span class="token operator">=&gt;</span> target<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">&#39;qy&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">const</span> page3 <span class="token operator">=</span> <span class="token keyword">await</span> newTarget2<span class="token punctuation">.</span><span class="token function">page</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">setCookie</span><span class="token punctuation">(</span><span class="token operator">...</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span><span class="token string">&#39;#app&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">waitForTimeout</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span>directoryPath <span class="token operator">+</span><span class="token string">&#39;/大屏.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;:已经截取了大屏页面...&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  	<span class="token keyword">const</span> selector4 <span class="token operator">=</span> <span class="token string">&#39;ul.leftMenu&gt;li:nth-child(3)&#39;</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">waitForTimeout</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>selector4<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;进入物联监测&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">waitForTimeout</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span>directoryPath <span class="token operator">+</span><span class="token string">&#39;/物联监测.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;已经截取了物联监测页面...&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">const</span> selector5 <span class="token operator">=</span> <span class="token string">&#39;div.quanjing&gt;ul&gt;li:nth-child(2)&#39;</span><span class="token punctuation">;</span></span>
<span class="line">	<span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">waitForSelector</span><span class="token punctuation">(</span>selector5<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">visible</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span>selector5<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;进入全景&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">	<span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">waitForTimeout</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span></span>
<span class="line">	<span class="token keyword">await</span> page3<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span>directoryPath <span class="token operator">+</span><span class="token string">&#39;/全景.png&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>xydm<span class="token operator">+</span><span class="token string">&#39;已经截取了全景页面...&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;出现错误:&#39;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,59)]))}const i=s(e,[["render",o]]),u=JSON.parse('{"path":"/backend/quote/crawler/02.html","title":"二、Puppeteer笔记","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1744806830000,"contributors":[{"name":"zhao-farmer","username":"zhao-farmer","email":"857899180@qq.com","commits":1,"url":"https://github.com/zhao-farmer"}],"changelog":[{"hash":"c70b07d347b059fbe78c7770e7fa611a62f92633","time":1744806830000,"email":"857899180@qq.com","author":"zhao-farmer","message":"前端笔记提交"}]},"filePathRelative":"backend/quote/crawler/02.md"}');export{i as comp,u as data};
