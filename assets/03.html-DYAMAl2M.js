import{aq as n,ar as a,as as e,at as p}from"./app-Cok9BT0p.js";const t="/note-front/other/knowledge/javascript/001.png",l="/note-front/other/knowledge/javascript/002.png",i={};function o(c,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h1 id="webassembly" tabindex="-1"><a class="header-anchor" href="#webassembly"><span>WebAssembly</span></a></h1><h2 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍"><span>1. 介绍</span></a></h2><p>Webassembly (wasm)，一种二进制代码格式，C、C++、Rust、GO 等编译成 wasn 在浏览器中运行</p><p><a href="https://webassembly.org/" target="_blank" rel="noopener noreferrer">Webassembly官网</a></p><h2 id="_2-主要使用场景" tabindex="-1"><a class="header-anchor" href="#_2-主要使用场景"><span>2. 主要使用场景</span></a></h2><ol><li>非常复杂的计算，计算密集型任务，rust、C 然后再浏览器端执行</li><li>图形渲染，skia + Webassembly = canvaskit</li><li>音视频剪辑，webcodes、FFmpeg(这个是脚本，那怎么在浏览器端执行呢? wasm)</li><li>高性能渲染库，3D,webGis，rust(python)、skia</li></ol><h2 id="_3-使用-typescript-创建wasm-文件" tabindex="-1"><a class="header-anchor" href="#_3-使用-typescript-创建wasm-文件"><span>3. 使用 typescript 创建wasm 文件</span></a></h2><p><a href="https://www.assemblyscript.org/" target="_blank" rel="noopener noreferrer">assemblyscript官网</a></p><ol><li><p>初始化项目</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token comment"># 构建项目</span></span>
<span class="line"><span class="token function">npm</span> init <span class="token parameter variable">-y</span></span>
<span class="line"><span class="token comment"># 安装</span></span>
<span class="line"><span class="token function">pnpm</span> <span class="token function">install</span> assemblyscript <span class="token parameter variable">-D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>package.json 新增构建脚本</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&quot;asbuild:release&quot;</span><span class="token operator">:</span> <span class="token string">&quot;asc assembly/index.ts --target release&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>asconfig.json 配置</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;targets&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;release&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token property">&quot;outFile&quot;</span><span class="token operator">:</span><span class="token string">&quot;build/release.wasm&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token property">&quot;textFile&quot;</span><span class="token operator">:</span><span class="token string">&quot;build/release.wat&quot;</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token property">&quot;sourceMap&quot;</span><span class="token operator">:</span><span class="token boolean">true</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;options&quot;</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token property">&quot;bindings&quot;</span><span class="token operator">:</span><span class="token string">&quot;esm&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>targets 配置</p><p>targets 定义了不同的编译目标配置：</p><ul><li>release：个编译目标的名称</li><li>outFile: &quot;build/release.wasm&quot; - 指定编译后的 WebAssembly 文件输出路径</li><li>textFile: &quot;build/release.wat&quot; - 指定生成的 WAT 文件路径（WebAssembly Text Format，是 WASM 的文本表示形式，方便阅读和调试）</li><li>sourceMap: true - 是否生成源码映射文件，用于调试时将 WASM 代码映射回原始的 AssemblyScript 代码</li></ul></li><li><p>options 配置</p><p>options 定义全局编译选项：</p><ul><li>bindings: &quot;esm&quot; - 表示生成 ES Module 格式的 JavaScript 绑定文件，用于在 JavaScript 中更方便地调用 WASM 模块</li></ul></li></ul></li><li><p>新增需要编译的ts文件 assembly/index.ts</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">,</span>b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">sub</span><span class="token punctuation">(</span>a<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> b<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> a <span class="token operator">-</span> b<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>进行编译</p><ul><li><p>执行命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">pnpm</span> asbuild:release</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>编译结果</p><p><img src="`+t+`" alt=""></p></li><li><p>文件介绍</p><ol><li><p>release.wasm (WebAssembly 二进制文件)</p><ul><li>最重要的文件，是实际运行的 WebAssembly 模块</li><li>二进制格式，体积小，加载快</li><li>在浏览器或 Node.js 中实际执行的文件</li></ul></li><li><p>release.wat (WebAssembly 文本格式)</p><ul><li>WebAssembly 的人类可读文本表示</li><li>用于调试和学习 WebAssembly 的工作原理</li><li>可以看到函数、内存布局、指令等</li></ul></li><li><p>release.js (JavaScript 绑定文件)</p><p>链接wasm文件和前端工程的胶水层代码</p></li><li><p>release.d.ts (TypeScript 类型定义)</p><ul><li>TypeScript 类型声明文件</li><li>提供导出函数的类型信息</li><li>让 TypeScript 项目能获得类型提示</li></ul></li><li><p>release.wasm.map (Source Map 文件)</p><p>源代码映射文件</p><ul><li>用于调试：将 WASM 代码映射回原始 TypeScript 代码</li><li>在浏览器开发工具中可以看到原始代码而不是 WASM</li><li>生产环境通常不需要</li></ul></li></ol></li><li><p>开发测试使用</p><ul><li><p>开发时：所有文件都有用</p><ul><li>.wasm - 运行</li><li>.js - 方便调用</li><li>.d.ts - 类型提示</li><li>.wat - 调试和学习</li><li>.wasm.map - 调试</li></ul></li><li><p>生产环境：通常只需要</p><ul><li>.wasm - 必需</li><li>.js - 如果使用 JS 包装器</li><li>.d.ts - 如果是 TypeScript 项目</li></ul></li></ul></li></ul></li><li><p>使用wasm文件</p><ul><li><p>新增 index.html</p><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html"><pre><code><span class="line"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>en<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>module<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">        <span class="token comment">// 使用胶水层的代码</span></span>
<span class="line">        <span class="token keyword">import</span> <span class="token punctuation">{</span> add<span class="token punctuation">,</span>sub <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./build/release.js&quot;</span></span>
<span class="line"></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">sub</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        </span>
<span class="line">    </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>添加 serve 服务器</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">pnpm</span> <span class="token function">install</span> serve <span class="token parameter variable">-D</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>添加运行脚本</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token string-property property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&quot;asbuild:release&quot;</span><span class="token operator">:</span> <span class="token string">&quot;asc assembly/index.ts --target release&quot;</span><span class="token punctuation">,</span></span>
<span class="line highlighted">    <span class="token string-property property">&quot;dev&quot;</span><span class="token operator">:</span> <span class="token string">&quot;serve .&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行命令</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> run dev</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>浏览器控制台打印</p><p><img src="`+l+'" alt=""></p></li></ul></li></ol>',9)]))}const u=n(i,[["render",o]]),d=JSON.parse('{"path":"/other/knowledge/javascript/03.html","title":"WebAssembly","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1757530254000,"contributors":[{"name":"zhao-farmer","username":"zhao-farmer","email":"857899180@qq.com","commits":1,"url":"https://github.com/zhao-farmer"}],"changelog":[{"hash":"2c9ec28ff41db4bb3e8c363d6656a261f88b4c95","time":1757530254000,"email":"857899180@qq.com","author":"zhao-farmer","message":"react一些相关的"}]},"filePathRelative":"other/knowledge/javascript/03.md"}');export{u as comp,d as data};
