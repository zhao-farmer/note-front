import{aq as t,ar as p,as as e,at as o}from"./app-Cok9BT0p.js";const l="/note-front/application/cocos/base/102.png",c="/note-front/application/cocos/base/105.png",i="/note-front/application/cocos/base/107.png",u="/note-front/application/cocos/base/108.png",r="/note-front/application/cocos/base/109.png",d="/note-front/application/cocos/base/110.png",k="/note-front/application/cocos/base/111.png",m="/note-front/application/cocos/base/112.png",v="/note-front/application/cocos/base/113.png",s="/note-front/application/cocos/base/114.png",b="/note-front/application/cocos/base/115.png",g="/note-front/application/cocos/base/116.png",h="/note-front/application/cocos/base/117.png",f="/note-front/application/cocos/base/118.png",_="/note-front/application/cocos/base/119.png",y="/note-front/application/cocos/base/120.png",w="/note-front/application/cocos/base/121.png",C="/note-front/application/cocos/base/122.png",T="/note-front/application/cocos/base/123.png",S="/note-front/application/cocos/base/124.png",x="/note-front/application/cocos/base/125.png",E="/note-front/application/cocos/base/126.png",L="/note-front/application/cocos/base/106.png",q="/note-front/application/cocos/base/127.png",P="/note-front/application/cocos/base/130.png",I="/note-front/application/cocos/base/128.png",B="/note-front/application/cocos/base/129.png",N="/note-front/application/cocos/base/131.png",R="/note-front/application/cocos/base/132.png",A="/note-front/application/cocos/base/133.gif",O="/note-front/application/cocos/base/134.png",M="/note-front/application/cocos/base/135.gif",V="/note-front/application/cocos/base/136.png",j="/note-front/application/cocos/base/137.gif",z="/note-front/application/cocos/base/138.png",F="/note-front/application/cocos/base/139.png",H="/note-front/application/cocos/base/140.png",D="/note-front/application/cocos/base/142.gif",a="/note-front/application/cocos/base/143.gif",W="/note-front/application/cocos/base/145.png",U="/note-front/application/cocos/base/146.gif",G="/note-front/application/cocos/base/147.png",Z="/note-front/application/cocos/base/148.gif",X="/note-front/application/cocos/base/149.png",Y="/note-front/application/cocos/base/150.gif",K="/note-front/application/cocos/base/151.png",J="/note-front/application/cocos/base/153.png",Q="/note-front/application/cocos/base/154.gif",$="/note-front/application/cocos/base/155.png",nn="/note-front/application/cocos/base/156.gif",sn="/note-front/application/cocos/base/157.png",an="/note-front/application/cocos/base/158.gif",tn="/note-front/application/cocos/base/159.png",pn="/note-front/application/cocos/base/160.gif",en="/note-front/application/cocos/base/161.png",on="/note-front/application/cocos/base/162.png",ln="/note-front/application/cocos/base/163.png",cn="/note-front/application/cocos/base/164.png",un="/note-front/application/cocos/base/165.png",rn="/note-front/application/cocos/base/166.gif",dn={};function kn(mn,n){return o(),p("div",null,n[0]||(n[0]=[e('<h1 id="四、ui组件" tabindex="-1"><a class="header-anchor" href="#四、ui组件"><span>四、UI组件</span></a></h1><h2 id="_4-1-canvas-画布" tabindex="-1"><a class="header-anchor" href="#_4-1-canvas-画布"><span>4.1 canvas 画布</span></a></h2><p>打开项目，点击canvas上，有两个特殊的组件</p><p><img src="'+l+'" alt=""></p><ol><li><p>锁定的 <code>UITransform</code> 组件</p><p><img src="'+c+'" alt=""></p><ul><li>canvas组件的宽高可以在项目中设置</li><li>可以让游戏自适应不同屏幕的大小</li></ul></li><li><p>Canvas组件</p><ul><li><p>CameraComponent：Canvas 关联的相机，此相机不一定会渲染 Canvas 下内容，可以与 AlignCanvasWithScreen 属性配合自动改变 Camera 的一些参数使其与 Canvas 对齐</p></li><li><p>AlignCanvasWithScreen：Canvas 关联的相机是否要与 Canvas 对齐，如果想要自己控制相机位置请勿勾选此选项（卷轴游戏等）</p></li></ul></li></ol><h2 id="_4-2-label-文本信息" tabindex="-1"><a class="header-anchor" href="#_4-2-label-文本信息"><span>4.2 label 文本信息</span></a></h2><ol><li><p>新建节点</p><p><img src="'+i+'" alt=""></p></li><li><p>属性信息</p><p><img src="'+u+'" alt=""></p><ul><li><p>Label 排版</p><ul><li>NONE：Label 组件默认的排版模式，此模式不会进行自动换行。</li><li>CLAMP：文字尺寸不会根据 Content Size 的大小进行缩放。</li><li>SHRINK：文字尺寸会根据 Content Size 大小进行自动缩放。</li><li>RESIZE_HEIGHT：文本的 Content Size 会根据文字排版进行适配，这个状态下用户无法手动修改文本的高度，文本的高度由内部算法自动计算出来。</li></ul></li><li><p>文本缓存类型（Cache Mode）</p><ul><li>NONE：默认值，Label 中的整段文本将生成一张位图。</li><li>BITMAP：选择后，Label 中的整段文本仍将生成一张位图，但是会尽量参与 动态合图。</li><li>CHAR：Label 将以“字”为单位将文本缓存到全局共享的位图中，相同字体样式和字号的每个字符将在全局共享一份缓存。能支持文本的频繁修改，对性能和内存最友好。也有更多限制，比如无法合成动图。</li></ul></li><li><p>使用字体</p><p><img src="'+r+'" alt=""></p></li><li><p>其他与html一致</p></li></ul></li></ol><h2 id="_4-3-richtext-富文本" tabindex="-1"><a class="header-anchor" href="#_4-3-richtext-富文本"><span>4.3 richText 富文本</span></a></h2><ol><li><p>新建richText</p><p><img src="'+d+'" alt=""></p></li><li><p>使用样式</p><ul><li><p>界面</p><p><img src="'+k+`" alt=""></p></li><li><p>富文本</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line">我是&lt;color=#ff0000&gt;红色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>,</span>
<span class="line">&lt;size=60&gt;大<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>size</span><span class="token punctuation">&gt;</span></span>号字体，</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">&gt;</span></span>斜体<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>,</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">&gt;</span></span>下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">&gt;</span></span>,</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>outline</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>#ff0</span><span class="token punctuation">&gt;</span></span>描边<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>outline</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>触发事件</p><ul><li><p>界面</p><p><img src="`+m+`" alt=""></p></li><li><p>富文本</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line">&lt;color=red&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>on</span> <span class="token attr-name">click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>点击<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>on</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">&gt;</span></span>调用</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>Test.ts 脚本</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> _decorator<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> Node <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cc&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> ccclass<span class="token punctuation">,</span> property <span class="token punctuation">}</span> <span class="token operator">=</span> _decorator<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">ccclass</span></span><span class="token punctuation">(</span><span class="token string">&#39;Test&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">update</span><span class="token punctuation">(</span>deltaTime<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击了&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行结果</p><p><img src="`+v+'" alt=""></p></li></ul></li><li><p>图文混排</p><ul><li><p>界面</p><p><img src="'+s+`" alt=""></p></li><li><p>富文本</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml"><pre><code><span class="line">这是一个地面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>land<span class="token punctuation">&quot;</span></span> <span class="token attr-name">click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>test<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>吗</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ul></li></ol><h2 id="_4-4-mask-遮罩" tabindex="-1"><a class="header-anchor" href="#_4-4-mask-遮罩"><span>4.4 mask 遮罩</span></a></h2><ol><li><p>新建遮罩</p><p><img src="`+b+'" alt=""></p></li><li><p>mask属性</p><table><thead><tr><th>属性</th><th>功能说明</th></tr></thead><tbody><tr><td>Type</td><td>遮罩类型。包括 RECT、ELLIPSE、GRAPHICS_STENCIL、SPRITE_STENCIL 四种类型。</td></tr><tr><td>Segments</td><td>椭圆遮罩的曲线细分数，只在遮罩类型设为 ELLIPSE 时生效</td></tr><tr><td>Inverted</td><td>反向遮罩</td></tr></tbody></table><ul><li><p>RECT 矩形遮罩</p><p><img src="'+g+'" alt=""></p></li><li><p>ELLIPSE 椭圆遮罩</p><ul><li><p>Segments 等于 3 - 20 机会都能看出是多边形</p><ul><li><p>值为3(值小于3都等于3，三角型)</p><p><img src="'+h+'" alt=""></p></li><li><p>值为7(7边形)</p><p><img src="'+f+'" alt=""></p></li></ul></li><li><p>Segments 大于20</p><ul><li><p>值为32</p><p><img src="'+_+'" alt=""></p></li><li><p>值为64</p><p><img src="'+y+'" alt=""></p></li></ul></li></ul></li><li><p>GRAPHICS_STENCIL 自定义图形遮罩</p><ul><li><p>自定义遮罩界面</p><p><img src="'+w+`" alt=""></p></li><li><p>脚本设置</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> _decorator<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> Mask<span class="token punctuation">,</span> Graphics <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cc&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> ccclass<span class="token punctuation">,</span> property <span class="token punctuation">}</span> <span class="token operator">=</span> _decorator<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">ccclass</span></span><span class="token punctuation">(</span><span class="token string">&#39;Test&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 获取图形</span></span>
<span class="line">        <span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span>Graphics<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 遮罩的配置</span></span>
<span class="line">        g<span class="token punctuation">.</span>lineWidth <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span></span>
<span class="line">        g<span class="token punctuation">.</span>fillColor<span class="token punctuation">.</span><span class="token function">fromHEX</span><span class="token punctuation">(</span><span class="token string">&#39;#ff0000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 移动位置，类似canvas</span></span>
<span class="line">        g<span class="token punctuation">.</span><span class="token function">moveTo</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// 超出组件的大小</span></span>
<span class="line">        g<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">160</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        g<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        g<span class="token punctuation">.</span><span class="token function">lineTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        g<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        g<span class="token punctuation">.</span><span class="token function">stroke</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        g<span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行结果</p><p><img src="`+C+'" alt=""></p></li></ul></li><li><p>SPRITE_STENCIL 自定义图片遮罩</p><ul><li><p>自定义图片需先删除图形</p><p><img src="'+T+'" alt=""></p></li><li><p>自定义图片设置</p><p><img src="'+S+'" alt=""></p></li></ul></li></ul></li></ol><h2 id="_4-5-widget-屏幕适配" tabindex="-1"><a class="header-anchor" href="#_4-5-widget-屏幕适配"><span>4.5 widget 屏幕适配</span></a></h2><ol><li><p>问题：当设定图片在画布的右上角，在不同的屏幕下，会呈现不同的效果</p><ul><li><p>界面</p><p><img src="'+x+'" alt=""></p></li><li><p>ipad 运行结果</p><p><img src="'+E+'" alt=""></p></li></ul></li><li><p>属性介绍</p><ul><li><p>新建 Widget 组件</p><p><img src="'+L+'" alt=""></p></li><li><p>对齐属性</p><ul><li><p>说明</p><ul><li>下面两个类别都有五个按钮，是五个不同的属性，把鼠标放上按钮上，一秒后出现属性名</li><li>默认对齐的是父节点的矩形边框</li></ul></li><li><p><code>Horizontal Alignment</code> 水平对齐</p><ul><li>NONE: 没有对齐属性</li><li>left: 左对齐；出现 <code>left输入框</code>，是离左边框的距离</li><li>center: 中心对齐；出现 <code>center输入框</code>， 以中心点为准，左右距离</li><li>right: 右对齐；出现 <code>right输入框</code>，距离右边框的距离</li><li>Horizontal stretch: 水平拉伸；出现 <code>left输入框</code>与<code>right输入框</code>，默认会给出当前组件的正常拉伸，如果为零拉伸为整个父组件的水平大小</li></ul></li><li><p><code>Vertical Alignment</code> 垂直对齐</p><ul><li>NONE: 没有对齐属性</li><li>top: 上对齐；出现 <code>top输入框</code>，是离上边框的距离</li><li>center: 中心对齐；出现 <code>center输入框</code>， 以中心点为准，上下距离</li><li>bottom: 下对齐；出现 <code>bottom输入框</code>，距离下边框的距离</li><li>Vertical stretch: 处置拉伸；出现 <code>top输入框</code>与<code>bottom输入框</code>，默认会给出当前组件的正常拉伸，如果为零拉伸为整个父组件的垂直大小</li></ul></li></ul></li><li><p>其他属性</p><ul><li>Target：对齐目标；指定对齐参照的节点，当这里未指定目标时会使用直接父级节点作为对齐目标</li><li>AlignMode: 指定 Widget 的对齐方式，用于决定运行时 Widget 应何时更新； 通常设置为 ALWAYS，每次节点产生变动时重新对齐。设置为 ONCE 时，仅在组件初始化时进行一次对齐。ON_WINDOW_RESIZE 时会在每次窗口变动时候更新一次</li></ul></li></ul></li><li><p>屏幕适配</p><ul><li><p>界面</p><p><img src="'+q+'" alt=""></p></li><li><p>项目自适应的宽、高，不能都选</p><p><img src="'+P+'" alt=""></p></li><li><p>ipad运行结果</p><p><img src="'+I+'" alt=""></p></li><li><p>苹果手机设置</p><p><img src="'+B+'" alt=""></p></li></ul></li></ol><h2 id="_4-6-button-按钮" tabindex="-1"><a class="header-anchor" href="#_4-6-button-按钮"><span>4.6 button 按钮</span></a></h2><ol><li><p>界面中的button按钮</p><p><img src="'+N+'" alt=""></p></li><li><p>Button 属性</p><ul><li><p>属性说明</p><table><thead><tr><th>属性</th><th>功能说明</th></tr></thead><tbody><tr><td>Target</td><td>Node 类型，当 Button 发生 Transition 的时候，会相应地修改 Target 节点的 SpriteFrame，颜色或者 Scale。</td></tr><tr><td>Interactable</td><td>布尔类型，设为 false 时，则 Button 组件进入禁用状态。</td></tr><tr><td>Transition</td><td>枚举类型，包括 NONE、COLOR、SPRITE 和 SCALE。每种类型对应不同的 Transition 设置。详情见下方的 Button Transition 部分。</td></tr><tr><td>Click Event</td><td>列表类型，默认为空，用户添加的每一个事件由节点引用，组件名称和一个响应函数组成。详情见下方的 Button 点击事件 部分。</td></tr></tbody></table></li><li><p>Transition属性</p><ul><li><p>NONE: 无任何特殊效果</p></li><li><p>COlOR: 颜色变化</p></li><li><p>SPRITE：精灵变化</p></li><li><p>SCALE: 大小变化</p></li><li><p>应用</p><ul><li>颜色变化 <ul><li><p>界面设置</p><p><img src="'+R+'" alt=""></p></li><li><p>属性参数</p><ul><li>Normal：Button 在 Normal 状态下的颜色。</li><li>Pressed：Button 在 Pressed 状态下的颜色。</li><li>Hover：Button 在 Hover 状态下的颜色。</li><li>Disabled：Button 在 Disabled 状态下的颜色。</li></ul></li><li><p>运行结果</p><p><img src="'+A+'" alt=""></p></li></ul></li><li>精灵变化 <ul><li><p>界面设置</p><p><img src="'+O+'" alt=""></p><blockquote><p>同时要取消label</p></blockquote></li><li><p>属性参数</p><ul><li>Normal：Button 在 Normal 状态下的SpriteFrame。</li><li>Pressed：Button 在 Pressed 状态下的SpriteFrame。</li><li>Hover：Button 在 Hover 状态下的SpriteFrame。</li><li>Disabled：Button 在 Disabled 状态下的SpriteFrame。</li></ul></li><li><p>运行结果</p><p><img src="'+M+'" alt=""></p></li></ul></li><li>大小变化 <ul><li><p>界面设置</p><p><img src="'+V+'" alt=""></p></li><li><p>属性参数</p><ul><li>Duration：Button 状态切换需要的时间间隔。</li><li>ZoomScale：当用户点击按钮后，按钮会缩放到一个值，这个值等于 Button 原始 scale * zoomScale，zoomScale 可以为负数</li></ul></li><li><p>运行结果</p><p><img src="'+j+'" alt=""></p></li></ul></li></ul></li></ul></li><li><p>Click 与 脚本交互</p><ul><li><p>属性介绍</p><table><thead><tr><th>属性</th><th>功能说明</th></tr></thead><tbody><tr><td>Target</td><td>带有脚本组件的节点。</td></tr><tr><td>Component</td><td>脚本组件名称。</td></tr><tr><td>Handler</td><td>指定一个回调函数，当用户点击 Button 并释放时会触发此函数。</td></tr><tr><td>CustomEventData</td><td>用户指定任意的字符串作为事件回调的最后一个参数传入。</td></tr></tbody></table></li><li><p>界面设置</p><p><img src="'+z+`" alt=""></p></li><li><p>脚本</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token keyword">import</span> <span class="token punctuation">{</span> _decorator<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> EventTouch<span class="token punctuation">,</span> Graphics <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cc&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> ccclass<span class="token punctuation">,</span> property <span class="token punctuation">}</span> <span class="token operator">=</span> _decorator<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">ccclass</span></span><span class="token punctuation">(</span><span class="token string">&#39;Test&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token function">test</span><span class="token punctuation">(</span>event<span class="token operator">:</span>EventTouch<span class="token punctuation">,</span>param<span class="token operator">:</span><span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击了&quot;</span><span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行结果</p><p><img src="`+F+'" alt=""></p></li></ul></li></ul></li></ol><h2 id="_4-7-layout-布局" tabindex="-1"><a class="header-anchor" href="#_4-7-layout-布局"><span>4.7 layout 布局</span></a></h2><ol><li><p>新建layout与模式</p><p><img src="'+H+'" alt=""></p></li><li><p>四种模式</p><ol><li><p>NONE：没有模式，可以当成空节点使用</p></li><li><p>HORIZONTAL：</p><ul><li><p>属性含义</p><ul><li><code>Aign Horizontal</code>: 水平对齐</li><li><code>Resize Mode</code>: 缩放模式</li><li><code>Padding Left</code>: 距离边框内边距-左</li><li><code>Padding Right</code>: 距离边框内边距-右</li><li><code>Spacing X</code>: 水平方向子节点之间的距离，类似html中gap</li><li><code>Horizontal Directior</code>: 水平方向，靠左还是靠右展示</li><li><code>Affected By Scale</code>: 子节点缩放影响整体布局</li></ul></li><li><p>调用展示</p><p><img src="'+D+'" alt=""></p></li></ul></li><li><p>VERTICAL：</p><ul><li><p>属性含义</p><ul><li><code>Align Vertical</code>: 垂直对齐</li><li><code>Resize Mode</code>: 缩放模式</li><li><code>Padding Top</code>: 距离边框内边距-上</li><li><code>Padding Bottom</code>: 距离边框内边距-下</li><li><code>Spacing Y</code>: 垂直方向子节点之间的距离，类似html中gap</li><li><code>Vertical Direction</code>: 垂直方向，靠上还是靠下展示</li><li><code>Affected By Scale</code>: 子节点缩放影响整体布局</li></ul></li><li><p>调用展示</p><p><img src="'+a+'" alt=""></p></li></ul></li><li><p>GRID(网格类似css的grid布局)：</p><ul><li><p>属性含义（综合了水平方向与垂直方向）</p></li><li><p>调用展示</p><p><img src="'+a+'" alt=""></p></li></ul></li><li><p>两种模式</p><ul><li>ResizeMode 模式： <ul><li>设置为 NONE 时，子物体和容器的大小变化互不影响。</li><li>设置为 CHILDREN 时，子物体大小会随着容器的大小而变化。</li><li>设置为 CONTAINER 时，容器的大小会随着子物体的大小变化。</li></ul></li></ul><blockquote><p>所有的排列都是根据容器大小进行计算的，如果需要固定排序，可以将 Type 设置为 GRID，然后设置 Constraint 和 ConstraintNum 来固定排序。</p></blockquote><ul><li>Constraint 模式： <ul><li>设置为 NONE 时，自由布局。</li><li>设置为 FIXED_ROW 时，固定行数，搭配 ConstraintNum 使用。</li><li>设置为 FIXED_COL 时，固定列数，搭配 ConstraintNum 使用。</li></ul></li></ul><blockquote><p>注意：Layout 设置后的结果需要到下一帧才会更新，除非你设置完以后手动调用 updateLayout API。</p></blockquote></li></ol></li></ol><h2 id="_4-8-scrollview-滑动组件" tabindex="-1"><a class="header-anchor" href="#_4-8-scrollview-滑动组件"><span>4.8 ScrollView 滑动组件</span></a></h2><ol><li><p>界面的滑动组件</p><p><img src="'+W+'" alt=""></p></li><li><p>ScrollView 属性</p><table><thead><tr><th>属性</th><th>功能说明</th></tr></thead><tbody><tr><td>content</td><td>它是一个节点引用，用来创建 ScrollView 的可滚动内容，通常这可能是一个包含一张巨大图片的节点。</td></tr><tr><td>Horizontal</td><td>布尔值，是否允许横向滚动。</td></tr><tr><td>Vertical</td><td>布尔值，是否允许纵向滚动。</td></tr><tr><td>Inertia</td><td>滚动的时候是否有加速度。</td></tr><tr><td>Brake</td><td>浮点数，滚动之后的减速系数。取值范围是 0-1，如果是 1 则立马停止滚动，如果是 0，则会一直滚动到 content 的边界。</td></tr><tr><td>Elastic</td><td>布尔值，是否回弹。</td></tr><tr><td>BounceDuration</td><td>浮点数，回弹所需要的时间。取值范围是 0-10。</td></tr><tr><td>HorizontalScrollBar</td><td>它是一个节点引用，用来创建一个滚动条来显示 content 在水平方向上的位置。</td></tr><tr><td>VerticalScrollBar</td><td>它是一个节点引用，用来创建一个滚动条来显示 content 在垂直方向上的位置</td></tr><tr><td>ScrollEvents</td><td>列表类型，默认为空，用户添加的每一个事件由节点引用，组件名称和一个响应函数组成。详情见下方的 ScrollView 事件</td></tr><tr><td>CancelInnerEvents</td><td>如果这个属性被设置为 true，那么滚动行为会取消子节点上注册的触摸事件，默认被设置为 true。</td></tr></tbody></table></li><li><p>运行结果</p><p><img src="'+U+'" alt=""></p></li></ol><h2 id="_4-9-pageview-分页布局-轮播图" tabindex="-1"><a class="header-anchor" href="#_4-9-pageview-分页布局-轮播图"><span>4.9 PageView 分页布局(轮播图)</span></a></h2><ol><li><p>界面中的分页布局</p><p><img src="'+G+'" alt=""></p></li><li><p>PageView 属性</p><table><thead><tr><th>属性</th><th>功能说明</th></tr></thead><tbody><tr><td>SizeMode</td><td>页面视图中每个页面大小类型，目前有 Unified 和 Free 类型。</td></tr><tr><td>Content</td><td>它是一个节点引用，用来创建 PageView 的可滚动内容</td></tr><tr><td>Direction</td><td>页面视图滚动方向</td></tr><tr><td>ScrollThreshold</td><td>滚动临界值，默认单位百分比，当拖拽超出该数值时，松开会自动滚动下一页，小于时则还原</td></tr><tr><td>AutoPageTurningThreshold</td><td>快速滑动翻页临界值，当用户快速滑动时，会根据滑动开始和结束的距离与时间计算出一个速度值，该值与此临界值相比较，如果大于临界值，则进行自动翻页</td></tr><tr><td>Inertia</td><td>否开启滚动惯性</td></tr><tr><td>Brake</td><td>开启惯性后，在用户停止触摸后滚动多快停止，0 表示永不停止，1 表示立刻停止</td></tr><tr><td>Elastic</td><td>布尔值，是否回弹</td></tr><tr><td>Bounce Duration</td><td>浮点数，回弹所需要的时间。取值范围是 0-10</td></tr><tr><td>Indicator</td><td>页面视图指示器组件</td></tr><tr><td>PageTurningEventTiming</td><td>设置 PageView、PageTurning 事件的发送时机</td></tr><tr><td>PageEvents</td><td>数组，滚动视图的事件回调函数</td></tr><tr><td>CancelInnerEvents</td><td>布尔值，是否在滚动行为时取消子节点上注册的触摸事件</td></tr></tbody></table></li><li><p>运行结果</p><p><img src="'+Z+'" alt=""></p></li></ol><h2 id="_4-10-progressbar-进度条" tabindex="-1"><a class="header-anchor" href="#_4-10-progressbar-进度条"><span>4.10 ProgressBar 进度条</span></a></h2><ol><li><p>界面中的进度条</p><p><img src="'+X+`" alt=""></p></li><li><p>ProgressBar 属性</p><table><thead><tr><th>属性</th><th>功能说明</th></tr></thead><tbody><tr><td>Bar Sprite</td><td>进度条渲染所需要的 Sprite 组件，可以通过拖拽一个带有 Sprite 组件的节点到该属性上来建立关联。</td></tr><tr><td>Mode</td><td>支持 HORIZONTAL（水平）、VERTICAL（垂直）和 FILLED（填充）三种模式，可以通过配合 reverse 属性来改变起始方向。</td></tr><tr><td>Total Length</td><td>当进度条为 100% 时 Bar Sprite 的总长度/总宽度。在 FILLED 模式下 Total Length 表示取 Bar Sprite 总显示范围的百分比，取值范围从 0 ~ 1。</td></tr><tr><td>Progress</td><td>浮点，取值范围是 0~1，不允许输入之外的数值。</td></tr><tr><td>Reverse</td><td>布尔值，默认的填充方向是从左至右/从下到上，开启后变成从右到左/从上到下。</td></tr></tbody></table></li><li><p>设置脚本运行</p><ul><li><p>脚本</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> _decorator<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> ProgressBar <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cc&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> ccclass<span class="token punctuation">,</span> property <span class="token punctuation">}</span> <span class="token operator">=</span> _decorator<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">ccclass</span></span><span class="token punctuation">(</span><span class="token string">&#39;Test&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> progressBar <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span>ProgressBar<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        progressBar<span class="token punctuation">.</span>progress <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 0.3 秒 进度条 进 百分百之五</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">schedule</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span>progressBar<span class="token punctuation">.</span>progress<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                progressBar<span class="token punctuation">.</span>progress <span class="token operator">+=</span> <span class="token number">0.05</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">0.3</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行结果</p><p><img src="`+Y+'" alt=""></p></li></ul></li></ol><h2 id="_4-11-slider-滑动条" tabindex="-1"><a class="header-anchor" href="#_4-11-slider-滑动条"><span>4.11 Slider 滑动条</span></a></h2><ol><li><p>界面中的滑动条</p><p><img src="'+K+'" alt=""></p></li><li><p>Slider 属性</p><table><thead><tr><th>属性</th><th>功能说明</th></tr></thead><tbody><tr><td>handle</td><td>滑块按钮部件，可以通过该按钮进行滑动调节 Slider 数值大小</td></tr><tr><td>direction</td><td>滑动器的方向，分为横向和竖向</td></tr><tr><td>progress</td><td>当前进度值，该数值的区间是 0-1 之间</td></tr><tr><td>slideEvents</td><td>滑动器组件事件回调函数</td></tr></tbody></table></li><li><p>运行结果</p><p><img src="'+s+'" alt=""></p></li></ol><h2 id="_4-12-editbox-输入框" tabindex="-1"><a class="header-anchor" href="#_4-12-editbox-输入框"><span>4.12 EditBox 输入框</span></a></h2><ol><li><p>界面中的输入框</p><p><img src="'+J+'" alt=""></p></li><li><p>EditBox 属性</p><table><thead><tr><th>属性</th><th>功能说明</th></tr></thead><tbody><tr><td>BackgroundImage</td><td>输入框背景节点上挂载的 Sprite 组件对象</td></tr><tr><td>FontColor</td><td>输入框文本的颜色</td></tr><tr><td>FontSize</td><td>输入框文本的字体大小</td></tr><tr><td>InputFlag</td><td>指定输入标识：可以指定输入方式为密码或者单词首字母大写（仅支持 Android 平台）</td></tr><tr><td>InputMode</td><td>指定输入模式：ANY 表示多行输入，其它都是单行输入，移动平台上还可以指定键盘样式。</td></tr><tr><td>LineHeight</td><td>输入框文本的行高</td></tr><tr><td>MaxLength</td><td>输入框最大允许输入的字符个数</td></tr><tr><td>Placeholder</td><td>输入框占位符的文本内容</td></tr><tr><td>PlaceholderFontColor</td><td>输入框占位符的文本字体颜色</td></tr><tr><td>PlaceholderFontSize</td><td>输入框占位符的文本字体大小</td></tr><tr><td>PlaceholderLabel</td><td>输入框占位符节点上挂载的 Label 组件对象</td></tr><tr><td>ReturnType</td><td>指定移动设备上面回车按钮的样式</td></tr><tr><td>String</td><td>输入框的初始输入内容，如果为空则会显示占位符的文本</td></tr><tr><td>TabIndex</td><td>修改 DOM 输入元素的 tabIndex，这个属性只有在 Web 上面修改有意义。</td></tr><tr><td>TextLabel</td><td>输入框输入文本节点上挂载的 Label 组件对象</td></tr></tbody></table></li><li><p>运行结果</p><p><img src="'+Q+'" alt=""></p></li></ol><h2 id="_4-13-toggle-复选框" tabindex="-1"><a class="header-anchor" href="#_4-13-toggle-复选框"><span>4.13 toggle 复选框</span></a></h2><ol><li><p>界面中的复选框</p><p><img src="'+$+'" alt=""></p></li><li><p>toggle 属性</p><table><thead><tr><th>属性</th><th>功能说明</th></tr></thead><tbody><tr><td>isChecked</td><td>布尔类型，如果这个设置为 true，则 check mark 组件会处于 enabled 状态，否则处于 disabled 状态。</td></tr><tr><td>checkMark</td><td>Sprite 类型，Toggle 处于选中状态时显示的图片</td></tr><tr><td>Check Events</td><td>列表类型，默认为空，用户添加的每一个事件由节点引用，组件名称和一个响应函数组成。详情见下方的 Toggle 事件 部分</td></tr></tbody></table><blockquote><p>注意：因为 Toggle 继承自 Button，所以关于 Toggle 的 Button 相关属性的详细说明和用法请参考 Button 组件。</p></blockquote></li><li><p>运行结果</p><p><img src="'+nn+'" alt=""></p></li></ol><h2 id="_4-14-togglecontainer-单选框" tabindex="-1"><a class="header-anchor" href="#_4-14-togglecontainer-单选框"><span>4.14 ToggleContainer 单选框</span></a></h2><ol><li><p>界面中的单选框</p><p><img src="'+sn+'" alt=""></p></li><li><p>ToggleContainer 属性</p><table><thead><tr><th>属性</th><th>功能说明</th></tr></thead><tbody><tr><td>AllowSwitchOff</td><td>如果这个设置为 true，那么 toggle 按钮在被点击的时候可以反复地被选中和未选中。</td></tr><tr><td>CheckEvents</td><td>选中事件。列表类型，默认为空，用户添加的每一个事件由节点引用，组件名称和一个响应函数组成。</td></tr></tbody></table></li><li><p>运行结果</p><p><img src="'+an+'" alt=""></p></li></ol><h2 id="_4-15-videoplayer-视频组件" tabindex="-1"><a class="header-anchor" href="#_4-15-videoplayer-视频组件"><span>4.15 VideoPlayer 视频组件</span></a></h2><ol><li><p>界面中的视频组件</p><p><img src="'+tn+`" alt=""></p></li><li><p>VideoPlayer 属性</p><table><thead><tr><th>Resource Type</th><th>视频来源的类型，目前支持本地（LOCAL）视频和远程（REMOTE）视频 URL</th></tr></thead><tbody><tr><td>Remote URL</td><td>当 Resource Type 为 REMOTE 时显示的字段，填入远程视频的 URL</td></tr><tr><td>Clip</td><td>当 Resource Type 为 LOCAL 时显示的字段，拖拽本地视频的资源到此处来使用</td></tr><tr><td>Play On Awake</td><td>视频加载后是否自动开始播放？</td></tr><tr><td>Current Time</td><td>指定从哪个时间点开始播放视频</td></tr><tr><td>Volume</td><td>视频的音量（0.0 ~ 1.0）</td></tr><tr><td>Mute</td><td>是否静音视频。静音时设置音量为 0，取消静音时恢复原来的音量</td></tr><tr><td>Keep Aspect Ratio</td><td>是否保持视频原来的宽高比</td></tr><tr><td>Full Screen On Awake</td><td>是否全屏播放视频</td></tr><tr><td>Stay On Bottom</td><td>永远在游戏视图最底层（该属性仅在 Web 平台生效）</td></tr><tr><td>Video Player Event</td><td>视频播放回调函数，该回调函数会在特定情况被触发，比如播放中，暂时，停止和完成播放。</td></tr></tbody></table></li><li><p>设置脚本运行</p><ul><li><p>脚本</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> _decorator<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> VideoPlayer  <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cc&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> ccclass<span class="token punctuation">,</span> property <span class="token punctuation">}</span> <span class="token operator">=</span> _decorator<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">ccclass</span></span><span class="token punctuation">(</span><span class="token string">&#39;Test&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">let</span> videoPlayer  <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span>VideoPlayer<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        videoPlayer<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>运行结果</p><p><img src="`+pn+'" alt=""></p></li></ul></li></ol><h2 id="_4-16-webview-网页视图" tabindex="-1"><a class="header-anchor" href="#_4-16-webview-网页视图"><span>4.16 WebView 网页视图</span></a></h2><ol><li><p>界面中的视频组件</p><p><img src="'+en+'" alt=""></p></li><li><p>WebView 属性</p><table><thead><tr><th>属性</th><th>功能说明</th></tr></thead><tbody><tr><td>Url</td><td>指定一个 URL 地址，这个地址以 http 或者 https 开头，请填写一个有效的 URL 地址。</td></tr><tr><td>WebView Events</td><td>WebView 的回调事件，当 webview 在加载网页过程中，加载网页结束后或者加载网页出错时会调用此函数。</td></tr></tbody></table></li><li><p>运行结果</p><p><img src="'+on+'" alt=""></p></li></ol><h2 id="_4-17-对话框练习" tabindex="-1"><a class="header-anchor" href="#_4-17-对话框练习"><span>4.17 对话框练习</span></a></h2><ol><li><p>资源加载与页面布局</p><ul><li><p>基础布局</p><p><img src="'+ln+'" alt=""></p></li><li><p>对话框中content节点</p><p><img src="'+cn+'" alt=""></p></li></ul></li><li><p>脚本相关</p><ul><li><p>脚本设置</p><p><img src="'+un+`" alt=""></p></li><li><p>PaojieControl.ts</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> _decorator<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> resources<span class="token punctuation">,</span>Sprite<span class="token punctuation">,</span>SpriteFrame <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cc&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> ccclass<span class="token punctuation">,</span> property <span class="token punctuation">}</span> <span class="token operator">=</span> _decorator<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">ccclass</span></span><span class="token punctuation">(</span><span class="token string">&#39;PaojieControl&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">PaojieControl</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 设置表情</span></span>
<span class="line">    <span class="token function">setImage</span><span class="token punctuation">(</span>face<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span>mouth<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 加载素材</span></span>
<span class="line">        resources<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>face <span class="token operator">+</span> <span class="token string">&quot;/spriteFrame&quot;</span><span class="token punctuation">,</span> SpriteFrame<span class="token punctuation">,</span> <span class="token punctuation">(</span>err<span class="token punctuation">,</span> sp<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span>Sprite<span class="token punctuation">)</span><span class="token punctuation">.</span>spriteFrame <span class="token operator">=</span> sp<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        resources<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>mouth<span class="token operator">+</span><span class="token string">&quot;/spriteFrame&quot;</span><span class="token punctuation">,</span>SpriteFrame<span class="token punctuation">,</span><span class="token punctuation">(</span>err<span class="token punctuation">,</span>sp<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span>Sprite<span class="token punctuation">)</span><span class="token punctuation">.</span>spriteFrame <span class="token operator">=</span> sp<span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>MsgControl.ts</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> _decorator<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> Label <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cc&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> ccclass<span class="token punctuation">,</span> property <span class="token punctuation">}</span> <span class="token operator">=</span> _decorator<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">ccclass</span></span><span class="token punctuation">(</span><span class="token string">&#39;MsgControl&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">MsgControl</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 刷新消息</span></span>
<span class="line">    <span class="token function">setMessage</span><span class="token punctuation">(</span>name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span>content<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span>Label<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">string</span> <span class="token operator">=</span> name<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span>Label<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">string</span> <span class="token operator">=</span> content<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>BgControl.ts</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> _decorator<span class="token punctuation">,</span> Component<span class="token punctuation">,</span> Label<span class="token punctuation">,</span> Input <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;cc&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> PaojieControl <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./PaojieControl&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> MsgControl <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./MsgControl&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span> ccclass<span class="token punctuation">,</span> property <span class="token punctuation">}</span> <span class="token operator">=</span> _decorator<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 新建消息类</span></span>
<span class="line"><span class="token keyword">class</span> <span class="token class-name">Message</span><span class="token punctuation">{</span></span>
<span class="line">    name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">    content<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">    face<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">    mouth<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>content<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>face<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>mouth<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>face <span class="token operator">=</span> face<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>mouth <span class="token operator">=</span> mouth<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">ccclass</span></span><span class="token punctuation">(</span><span class="token string">&#39;BgControl&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">BgControl</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 人物和消息的控制器</span></span>
<span class="line">    <span class="token decorator"><span class="token at operator">@</span><span class="token function">property</span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>type<span class="token operator">:</span>PaojieControl<span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    paojieControl<span class="token operator">:</span> PaojieControl <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token decorator"><span class="token at operator">@</span><span class="token function">property</span></span><span class="token punctuation">(</span>MsgControl<span class="token punctuation">)</span></span>
<span class="line">    msgControl<span class="token operator">:</span> MsgControl <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 消息数组</span></span>
<span class="line">    msgs<span class="token operator">:</span> Message<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 当前是第几条消息</span></span>
<span class="line">    index<span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 初始化数组</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>msgs <span class="token operator">=</span> <span class="token punctuation">[</span></span>
<span class="line">            <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;御坂美琴&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;今天天气不错！&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;paojieface_02&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;paojiemouth_02&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;御坂美琴&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;来喝点饮料&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;paojieface_01&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;paojiemouth_01&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token keyword">new</span> <span class="token class-name">Message</span><span class="token punctuation">(</span><span class="token string">&quot;御坂美琴&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;可以贩卖机又坏了&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;paojieface_02&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;paojiemouth_02&quot;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token punctuation">]</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 鼠标点击对话</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>Input<span class="token punctuation">.</span>EventType<span class="token punctuation">.</span><span class="token constant">TOUCH_START</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            </span>
<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>msgs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 如果对话面板没显示，显示</span></span>
<span class="line">                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>msgControl<span class="token punctuation">.</span>node<span class="token punctuation">.</span>active <span class="token operator">==</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">this</span><span class="token punctuation">.</span>msgControl<span class="token punctuation">.</span>node<span class="token punctuation">.</span>active <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token comment">// 读消息</span></span>
<span class="line">                <span class="token keyword">let</span> message <span class="token operator">=</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>msgs<span class="token punctuation">[</span><span class="token keyword">this</span><span class="token punctuation">.</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token comment">// 显示消息</span></span>
<span class="line">                <span class="token keyword">this</span><span class="token punctuation">.</span>paojieControl<span class="token punctuation">.</span><span class="token function">setImage</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>face<span class="token punctuation">,</span>message<span class="token punctuation">.</span>mouth<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">                <span class="token keyword">this</span><span class="token punctuation">.</span>msgControl<span class="token punctuation">.</span><span class="token function">setMessage</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span>name<span class="token punctuation">,</span>message<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">update</span><span class="token punctuation">(</span>deltaTime<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        </span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 刷新消息</span></span>
<span class="line">    <span class="token function">setMessage</span><span class="token punctuation">(</span>name<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span>content<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span>Label<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">string</span> <span class="token operator">=</span> name<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>node<span class="token punctuation">.</span>children<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getComponent</span><span class="token punctuation">(</span>Label<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">string</span> <span class="token operator">=</span> content<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>运行结果</p><p><img src="`+rn+'" alt=""></p></li></ol>',37)]))}const bn=t(dn,[["render",kn]]),gn=JSON.parse('{"path":"/application/cocos/base/04.html","title":"四、UI组件","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1754285665000,"contributors":[{"name":"zhao-farmer","username":"zhao-farmer","email":"857899180@qq.com","commits":1,"url":"https://github.com/zhao-farmer"}],"changelog":[{"hash":"bf54d5db5209f06fb3d25687934eecf69571d546","time":1754285665000,"email":"857899180@qq.com","author":"zhao-farmer","message":"2025年8月"}]},"filePathRelative":"application/cocos/base/04.md"}');export{bn as comp,gn as data};
