import{aq as n,ar as a,as as e,at as t}from"./app-Cok9BT0p.js";const p={};function c(i,s){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="十一、可访问性" tabindex="-1"><a class="header-anchor" href="#十一、可访问性"><span>十一、可访问性</span></a></h1><p>PixiJS通过一个基于dom的覆盖系统内置了可访问性支持，该系统集成了屏幕阅读器、键盘导航和其他辅助技术。它使用 <code>&lt;div&gt;</code> 覆盖向屏幕阅读器描述可视元素</p><p>信息</p><p>可访问性是可选的，以减少包的大小，必须显式启用。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&#39;pixi.js/accessibility&#39;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> Container <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;pixi.js&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">button<span class="token punctuation">.</span>accessible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-1-它是如何工作的" tabindex="-1"><a class="header-anchor" href="#_11-1-它是如何工作的"><span>11.1 它是如何工作的</span></a></h2><p>PixiJS将DOM  <code>&lt;div&gt;</code> 元素放置在画布上，与可访问对象的边界对齐。这些元素:</p><ul><li>可通过键盘接收焦点（ <code>tabIndex</code> ）</li><li>向屏幕阅读器宣布 <code>accessibleTitle</code> 或 <code>accessibleHint</code></li><li>调度 <code>click</code> ,  <code>mouseover</code> ,  <code>mouseout</code> 事件作为Pixi指针事件</li><li>在适当的地方使用 <code>aria-live</code> 和 <code>aria-label</code></li></ul><h2 id="_11-2-启用系统" tabindex="-1"><a class="header-anchor" href="#_11-2-启用系统"><span>11.2 启用系统</span></a></h2><p>要启用可访问性，你必须在创建渲染器之前导入该模块：</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token string">&#39;pixi.js/accessibility&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>PixiJS自动安装 <code>AccessibilitySystem</code> 到你的渲染器。您可以配置激活它的方式和时间。</p><h2 id="_11-3-配置选项" tabindex="-1"><a class="header-anchor" href="#_11-3-配置选项"><span>11.3 配置选项</span></a></h2><p>你可以通过向 <code>Application</code> 构造函数传递选项来定制可访问性系统何时以及如何激活：</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Application</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">    accessibilityOptions<span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">        enabledByDefault<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 启动时默认启用</span></span>
<span class="line">        activateOnTab<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 禁用通过Tab键自动激活</span></span>
<span class="line">        deactivateOnMouseMove<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 鼠标移动时保持系统激活状态</span></span>
<span class="line">        debug<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 显示div覆盖层用于调试</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或者通过编程方式启用/禁用系统：</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line">app<span class="token punctuation">.</span>renderer<span class="token punctuation">.</span>accessibility<span class="token punctuation">.</span><span class="token function">setAccessibilityEnabled</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_10-4-创建可访问对象" tabindex="-1"><a class="header-anchor" href="#_10-4-创建可访问对象"><span>10.4 创建可访问对象</span></a></h2><p>要将显示对象标记为可访问并将其添加到可访问系统中，请将 <code>accessible</code> 属性设置为 <code>true</code> 。这将创建一个 <code>&lt;div&gt;</code> 覆盖，屏幕阅读器可以与之交互。</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts"><pre><code><span class="line"><span class="token keyword">const</span> button <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Container</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">button<span class="token punctuation">.</span>accessible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">app<span class="token punctuation">.</span>stage<span class="token punctuation">.</span><span class="token function">addChild</span><span class="token punctuation">(</span>button<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-4-1-可访问容器的属性" tabindex="-1"><a class="header-anchor" href="#_10-4-1-可访问容器的属性"><span>10.4.1 可访问容器的属性</span></a></h3><p>你可以在可访问容器上设置几个属性来自定义它们的行为：</p><table><thead><tr><th>财产</th><th>描述</th></tr></thead><tbody><tr><td><code>accessible</code></td><td>启用对象的可访问性</td></tr><tr><td><code>accessibleTitle</code></td><td>为屏幕阅读器设置 <code>title</code></td></tr><tr><td><code>accessibleHint</code></td><td>设置 <code>aria-label</code></td></tr><tr><td><code>accessibleText</code></td><td>div的可选内部文本</td></tr><tr><td><code>accessibleType</code></td><td>用于shadow元素的标签名称（ <code>&#39;button&#39;</code> ,  <code>&#39;div&#39;</code> 等）</td></tr><tr><td><code>accessiblePointerEvents</code></td><td>CSS  <code>pointer-events</code> 值（ <code>&#39;auto&#39;</code> ,  <code>&#39;none&#39;</code> 等）</td></tr><tr><td><code>tabIndex</code></td><td>允许焦点与键盘导航</td></tr><tr><td><code>accessibleChildren</code></td><td>此容器的子容器是否可访问</td></tr></tbody></table>`,23)]))}const l=n(p,[["render",c]]),d=JSON.parse('{"path":"/animation/pixi/official/11.html","title":"十一、可访问性","lang":"zh-CN","frontmatter":{},"git":{"updatedTime":1752490925000,"contributors":[{"name":"zhao-farmer","username":"zhao-farmer","email":"857899180@qq.com","commits":1,"url":"https://github.com/zhao-farmer"}],"changelog":[{"hash":"08d014805d6447d2221b34fe03fdc2ca18411d66","time":1752490925000,"email":"857899180@qq.com","author":"zhao-farmer","message":"2025年7月更新"}]},"filePathRelative":"animation/pixi/official/11.md"}');export{l as comp,d as data};
